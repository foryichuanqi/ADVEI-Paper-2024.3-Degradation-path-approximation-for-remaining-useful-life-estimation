# -*- coding: utf-8 -*-
"""
Created on Wed Mar 22 16:37:59 2023

@author: Administrator
"""

import xlrd

import matplotlib.pyplot as plt

import numpy as np

from scipy.optimize import minimize, rosen, rosen_der

from scipy.stats import linregress


shed=175

import numpy as np
import pandas as pd
import os
import pickle
import scipy as sp
import datetime


import numpy as np

import scipy as sp

import math

from numpy import matmul as mm
from math import sqrt,pi,log, exp

import xlrd

import matplotlib.pyplot as plt

import numpy as np

from scipy.optimize import minimize, rosen, rosen_der

from scipy.stats import linregress

from scipy.stats import norm


import scipy.io as scio




print(os.path.abspath(os.path.join(os.getcwd(), "../..")))
last_last_path=os.path.abspath(os.path.join(os.getcwd(), "../.."))

print(os.path.abspath(os.path.join(os.getcwd(), "..")))
last_path=os.path.abspath(os.path.join(os.getcwd(), ".."))

print(os.path.abspath(os.path.join(os.getcwd(), "../../..")))
last_last_last_path=os.path.abspath(os.path.join(os.getcwd(), "../../.."))


print(os.path.abspath(os.path.join(os.getcwd(), "../../../..")))
last_last_last_last_path=os.path.abspath(os.path.join(os.getcwd(), "../../../.."))





def get_data_list():

    
 
    CS2_35=[39.6435188,41.73550651,43.70386749,45.59752512,47.44376057,49.22414953,50.94063898,52.59512744,54.18946618,55.72546025,57.20486968,58.62941047,60.00075568,61.32053643,62.59034292,63.81172539,64.98619508,66.11522516,67.20025165,68.24267429,69.24385741,70.2051308,71.12779051,72.01309967,72.86228928,73.67655898,74.4570778,75.20507849,75.94243447,76.66800439,77.38074463,78.07970525,78.76402602,79.43293254,80.08573257,80.72181228,81.3406328,81.9417267,82.52469474,83.08920252,83.63497739,84.16180538,84.66952821,85.15804041,85.62728657,86.07725857,86.50799299,86.91956854,87.31210365,87.68575403,88.04071039,88.37719619,88.69546552,88.99580098,89.27851166,89.54393124,89.79241606,90.02434336,90.24010948,90.44012824,90.62482925,90.79465641,90.95006638,91.09152714,91.21951663,91.33452138,91.43703525,91.52755821,91.6065952,91.67465492,91.73224887,91.77989023,91.81809293,91.84737073,91.86823627,91.88120029,91.88688229,91.88839744,91.88839744,91.88839744,91.88839744,91.88839744,91.88839744,91.88839744,91.88839744,91.88839744,91.88839744,91.88839744,91.88839744,91.88839744,91.88839744,91.88839744,91.88839744,91.88839744,91.88839744,91.88839744,91.88839744,91.88839744,91.88839744,91.88839744,91.99348548,92.12454651,92.25519913,92.38528194,92.51464058,92.64312776,92.77060337,92.89693457,93.02199582,93.14566892,93.26784304,93.38841476,93.50728797,93.62437397,93.73959135,93.85286598,93.96413095,94.0733265,94.18039996,94.28530563,94.3880047,94.48846517,94.58666168,94.68257544,94.77619407,94.87901865,95.03217647,95.18676599,95.34278076,95.50021455,95.65906133,95.81931527,95.98097074,96.14402231,96.3084647,96.49096621,96.71010318,96.93286811,97.15923479,97.38917506,97.62265881,97.85965413,98.10012733,98.34404302,98.59136424,98.84205245,99.09606759,99.35336831,99.61391177,99.87765393,100.1445496,100.4145523,100.6876147,100.9636882,101.2427235,101.5246703,101.8094774,102.0970931,102.3874649,102.6805395,102.9762632,103.2745819,103.5754409,103.8787851,104.1845593,104.4927078,104.8031748,105.1159044,105.4308406,105.7479272,106.0671083,106.3883279,106.7115303,107.0366596,107.3636608,107.6924786,108.0230583,108.3553457,108.6892868,109.0248284,109.3619176,109.7005022,110.0405307,110.3819523,110.7247168,111.0687749,111.4140781,111.7605789,112.1082306,112.4569874,112.8068047,113.1576388,113.5094471,113.8621881,114.2158217,114.5703086,114.9256111,115.2816925,115.6385177,115.9960525,116.3542646,116.7131227,117.072597,117.4326594,117.793283,118.1544425,118.5161143,118.8782761,119.2409074,119.6039892,119.9675041,120.3314367,120.6957727,121.0604999,121.4256078,121.7910874,122.1569315,122.5231349,122.8896939,123.2566067,123.6238731,123.9914949,124.3594757,124.7278208,125.0965374,125.4656343,125.8351225,126.2050145,126.5753248,126.9460695,127.3172667,127.6889364,128.0611002,128.4337816,128.8070058,129.1807998,129.5551926,129.9302146,130.3058983,130.6822776,131.0593884,131.4372681,131.8159558,132.1954926,132.5759206,132.9572842,133.3396289,133.723002,134.1074524,134.4930303,134.8797876,135.2677775,135.6570549,136.0476757,136.4396975,136.8331792,137.2281807,137.6247635,138.0229903,138.4229246,138.8246317,139.2281774,139.6336288,140.0410542,140.4505224,140.8621036,141.2758687,141.6918894,142.1102381,142.5309883,142.9542136,143.3799888,143.808389,144.2394899,144.6733675,145.1100985,145.5497597,145.9924284,146.4381821,146.8870983,147.3392549,147.7947297,148.2536005,148.7159452,149.1818414,149.6513666,150.124598,150.6016127,151.0824871,151.5672974,152.0561191,152.5490275,153.0460967,153.5474006,154.0530121,154.5630033,155.0774454,155.5964086,156.119962,156.6481737,157.1811105,157.7188382,158.2614209,158.8089216,159.3614017,159.9189212,160.4815383,161.0493096,161.6222903,162.2005332,162.7840897,163.373009,163.9673384,164.5671231,165.1724063]    
         
    CS2_36=[24.21603668,27.76392576,31.05812474,34.11272657,36.94126062,39.55670907,41.97152296,44.19763785,46.24648927,48.12902763,49.85573305,51.43662963,52.88129959,54.19889697,55.39816113,56.48742985,57.47465218,58.36740102,59.17288536,59.89796229,60.54914868,61.13263263,61.65428459,62.11966834,62.53405155,62.90241619,63.22946866,63.51964968,63.77986482,64.02124681,64.24612443,64.45667649,64.6549378,64.84280487,65.02204165,65.19428489,65.36104955,65.52373394,65.68362478,65.84190207,65.99964387,66.15783094,66.31735119,66.47900406,66.64350478,66.81148844,66.983514,67.16006816,67.34156907,67.52837002,67.72076293,67.91898175,68.12320577,68.33356283,68.55013239,68.77294851,69.00200277,69.23724705,69.47859619,69.72593064,69.97909895,70.23792017,70.50218623,70.77166413,71.04609814,71.32521189,71.62235332,72.01186156,72.41093197,72.81906332,73.23573249,73.66039698,74.09249736,74.53145956,74.97669714,75.42761342,75.88360347,76.34405616,76.80835594,77.27588467,77.7460233,78.21815351,78.69165919,79.16592799,79.64035262,80.11433222,80.58727357,81.05859228,81.52771389,81.9940749,82.45712376,82.91632177,83.37114395,83.82107982,84.26563414,84.7043276,85.13669743,85.562298,85.98070136,86.39149766,86.79429563,87.18872298,87.57442667,87.95107329,88.31834924,88.67596103,89.02363537,89.3611194,89.6881807,90.00460745,90.3102084,90.60481293,90.88827096,91.16045296,91.42124983,91.67057279,91.90835323,92.13454258,92.34911212,92.55205274,92.74337473,92.92310751,93.0942088,93.25737267,93.41259973,93.55990377,93.69931161,93.8308629,93.95460987,94.07061711,94.17896129,94.27973097,94.3730263,94.45895874,94.53765081,94.60923579,94.67537072,94.73773813,94.79638462,94.85136201,94.90272718,94.95054198,94.99487308,95.03579181,95.07337407,95.10770016,95.13885463,95.16692615,95.19200739,95.21419481,95.23358857,95.25029236,95.26441323,95.27606148,95.28535047,95.29239651,95.29731865,95.30023858,95.30128046,95.30128046,95.30128046,95.30128046,95.30128046,95.30128046,95.30128046,95.30128046,95.30128046,95.30128046,95.30128046,95.30128046,95.30128046,95.30128046,95.30128046,95.30128046,95.30128046,95.30128046,95.30128046,95.30128046,95.30128046,95.30128046,95.30128046,95.30128046,95.30128046,95.30128046,95.30128046,95.30128046,95.30128046,95.30128046,95.30128046,95.30128046,95.30128046,95.30128046,95.30128046,95.30128046,95.30128046,95.30128046,95.30128046,95.33521881,95.37337294,95.41511465,95.55435079,95.71377564,95.88296678,96.06207811,96.25125625,96.4506404,96.6603623,96.97094911,97.36193722,97.76950693,98.19375769,98.6347772,99.09264146,99.56741468,100.0591493,100.567886,101.0936539,101.6364702,102.1963406,102.7732591,103.3672081,103.9781587,104.6060704,105.2508912,105.9125583,106.5909971,107.2861225,107.997838,108.7260364,109.4706,110.2314,111.0082975,111.8011431,112.6097773,113.4340305,114.2737233,115.1286665,115.9986614,116.8835001,117.7829651,118.6968305,119.6248611,120.5668133,121.5224352,122.4914666,123.4736392,124.4686773,125.4762972,126.4962082,127.5281125,128.5717052,129.6266751,130.6927044,131.7694691,132.8566394,133.9538799,135.0608497,136.1772027,137.3025878,138.4366496,139.5790278,140.7293584,141.8872733,143.0524007,144.2243656,145.4027897,146.587292,147.7774889,148.9729945,150.1734206,151.3783777,152.5874742,153.8003175,155.0165141,156.2356696,157.457389,158.6812774,159.9069395,161.1339807,162.3620068,163.5906241,164.8194404,166.0480645,167.2761068,168.5031796,169.7288971,170.9528758,172.1747347,173.3940956,174.6105832,175.8238256,177.033454,178.2391036,179.4404132,180.6370259,181.828589,183.0147543,184.1951785,185.3695228,186.5374541,187.6986441,188.8527702,189.9995156,191.1385693,192.2696262,193.3923874,194.5065607,195.6118601,196.7080065,197.7947275,198.8717578,199.938839,200.9957205,202.0421585,203.0779171]
            
    CS2_37=[29.10206571,37.72371374,46.30597344,54.85235886,56.62552062,58.36924525,60.0864704,61.77995584,63.99136847,66.1840545,68.36028042,70.5221612,71.42482968,72.3169529,73.20022769,74.07622309,74.94638596,75.81204639,76.67442293,77.53462772,78.06032948,78.58578435,79.1118146,79.63915516,80.16845805,80.70029674,81.23517027,81.7735073,82.31567006,82.86195812,83.41261208,83.96781717,84.43206697,84.90108576,85.37491275,85.85354489,86.33693981,86.82501875,87.3176694,87.81474849,88.31608449,88.82148004,89.33071439,89.84354565,90.3597131,90.87893921,91.40093175,91.92538572,92.45198521,92.98040518,93.51031314,94.04137091,94.57323595,95.10556296,95.63800534,96.17021635,96.70185045,97.23256457,97.76201907,98.28987884,98.81581444,99.33950279,99.86062827,100.3788833,100.799267,101.2161926,101.6293813,102.0385652,102.4434876,102.8439039,103.2395815,103.6303009,104.0158552,104.396051,104.7707085,105.139662,105.5027592,105.8598624,106.2108481,106.5556068,106.8940438,107.2260783,107.5516441,107.8706892,108.1831756,108.4890795,108.788391,109.0811137,109.367265,109.6468755,109.9199887,110.186661,110.4469615,110.7009711,110.9487829,111.1905014,111.3580991,111.5198456,111.6758782,111.8263436,111.9713985,112.1112087,112.2459489,112.3782155,112.5104821,112.6427487,112.7750153,112.9072819,113.0395485,113.1718151,113.3040817,113.4363483,113.5686149,113.7008816,113.8331482,113.9654148,114.0976814,114.229948,114.3622146,114.4944812,114.6267478,114.7590144,114.891281,115.0235477,115.1558143,115.2880809,115.4203475,115.5526141,115.6475159,115.7424177,115.8373195,115.9322214,116.0271232,116.122025,116.2169268,116.3118286,116.4067305,116.5016323,116.5965341,116.6914359,116.7863377,116.8812396,116.9761414,117.0710432,117.165945,117.2608468,117.3557486,117.4506505,117.5455523,117.6404541,117.735356,117.8302578,117.9251596,118.0200614,118.1149632,118.209865,118.3047668,118.3996687,118.4945705,118.5894723,118.7430791,118.8966859,119.0502928,119.2038996,119.3575064,119.5111132,119.66472,119.8183269,119.9719337,120.1255405,120.3410954,120.6199926,120.9031699,121.1905016,121.4818542,121.7770873,122.0760531,122.3785971,122.6845585,122.9937702,123.3060594,123.6212477,123.9391517,124.259583,124.582349,124.9072533,125.2340954,125.5626719,125.8927766,126.2242007,126.5567339,126.890164,127.5350476,128.1804012,128.8260108,129.4716627,130.1171441,130.7622433,131.4067503,132.0504575,132.6931595,133.3346546,133.9747441,134.613234,135.2499343,135.8846604,136.5172331,137.1474793,137.775232,138.4003314,139.0226251,139.6419683,140.2582245,140.871266,141.4809741,142.0872396,142.6899633,143.2890561,143.8844398,144.4760473,145.0638225,145.6477213,146.2277117,146.8037739,147.7231425,148.6385812,149.5501089,150.4577574,151.3615723,152.2616127,153.1579516,154.0506758,154.9398859,155.8256967,156.7082371,157.5876498,158.4640915,159.3377331,160.2087588,161.0773667,161.9437682,162.808188,163.6708636,164.532045,165.3919945,166.2509863,167.1093059,167.9672494,168.8251236,169.6832447,170.5419378,171.4015367,172.2623823,173.1248225,173.9892108,174.8559057,175.4924136,176.1319554,176.7748977,177.4216077,178.0724516,178.7277933,179.3879931,180.0534062,180.724381,181.4012578,182.0843664,182.7740249,183.4705376,184.1741929,184.8852616,185.6039941,186.3306187,187.0653393,187.8083325,188.5597454,189.3196931,190.0882554,190.8654747,191.6513525,192.4458466,193.2488681,194.0602778,194.8798829,195.7074339,196.5426204,197.385068,198.2343338,198.9538561,199.6790907,200.4093662,201.1439264,201.8819257,202.6224249,203.3643859,204.1066673,204.8480193,205.5870782,206.3223613,207.0522618,207.7750424,208.4888303,209.1916107,209.8812214,210.5553457,211.2115068,211.8470607,212.4591899,213.0448962,213.6009936,214.1241015,214.6106366,215.0568061,215.4995219,215.9422376]       
    
    CS2_38=[29.10206571,37.72371374,46.30597344,54.85235886,56.62552062,58.36924525,60.0864704,61.77995584,63.99136847,66.1840545,68.36028042,70.5221612,71.42482968,72.3169529,73.20022769,74.07622309,74.94638596,75.81204639,76.67442293,77.53462772,78.06032948,78.58578435,79.1118146,79.63915516,80.16845805,80.70029674,81.23517027,81.7735073,82.31567006,82.86195812,83.41261208,83.96781717,84.43206697,84.90108576,85.37491275,85.85354489,86.33693981,86.82501875,87.3176694,87.81474849,88.31608449,88.82148004,89.33071439,89.84354565,90.3597131,90.87893921,91.40093175,91.92538572,92.45198521,92.98040518,93.51031314,94.04137091,94.57323595,95.10556296,95.63800534,96.17021635,96.70185045,97.23256457,97.76201907,98.28987884,98.81581444,99.33950279,99.86062827,100.3788833,100.799267,101.2161926,101.6293813,102.0385652,102.4434876,102.8439039,103.2395815,103.6303009,104.0158552,104.396051,104.7707085,105.139662,105.5027592,105.8598624,106.2108481,106.5556068,106.8940438,107.2260783,107.5516441,107.8706892,108.1831756,108.4890795,108.788391,109.0811137,109.367265,109.6468755,109.9199887,110.186661,110.4469615,110.7009711,110.9487829,111.1905014,111.3580991,111.5198456,111.6758782,111.8263436,111.9713985,112.1112087,112.2459489,112.3782155,112.5104821,112.6427487,112.7750153,112.9072819,113.0395485,113.1718151,113.3040817,113.4363483,113.5686149,113.7008816,113.8331482,113.9654148,114.0976814,114.229948,114.3622146,114.4944812,114.6267478,114.7590144,114.891281,115.0235477,115.1558143,115.2880809,115.4203475,115.5526141,115.6475159,115.7424177,115.8373195,115.9322214,116.0271232,116.122025,116.2169268,116.3118286,116.4067305,116.5016323,116.5965341,116.6914359,116.7863377,116.8812396,116.9761414,117.0710432,117.165945,117.2608468,117.3557486,117.4506505,117.5455523,117.6404541,117.735356,117.8302578,117.9251596,118.0200614,118.1149632,118.209865,118.3047668,118.3996687,118.4945705,118.5894723,118.7430791,118.8966859,119.0502928,119.2038996,119.3575064,119.5111132,119.66472,119.8183269,119.9719337,120.1255405,120.3410954,120.6199926,120.9031699,121.1905016,121.4818542,121.7770873,122.0760531,122.3785971,122.6845585,122.9937702,123.3060594,123.6212477,123.9391517,124.259583,124.582349,124.9072533,125.2340954,125.5626719,125.8927766,126.2242007,126.5567339,126.890164,127.5350476,128.1804012,128.8260108,129.4716627,130.1171441,130.7622433,131.4067503,132.0504575,132.6931595,133.3346546,133.9747441,134.613234,135.2499343,135.8846604,136.5172331,137.1474793,137.775232,138.4003314,139.0226251,139.6419683,140.2582245,140.871266,141.4809741,142.0872396,142.6899633,143.2890561,143.8844398,144.4760473,145.0638225,145.6477213,146.2277117,146.8037739,147.7231425,148.6385812,149.5501089,150.4577574,151.3615723,152.2616127,153.1579516,154.0506758,154.9398859,155.8256967,156.7082371,157.5876498,158.4640915,159.3377331,160.2087588,161.0773667,161.9437682,162.808188,163.6708636,164.532045,165.3919945,166.2509863,167.1093059,167.9672494,168.8251236,169.6832447,170.5419378,171.4015367,172.2623823,173.1248225,173.9892108,174.8559057,175.4924136,176.1319554,176.7748977,177.4216077,178.0724516,178.7277933,179.3879931,180.0534062,180.724381,181.4012578,182.0843664,182.7740249,183.4705376,184.1741929,184.8852616,185.6039941,186.3306187,187.0653393,187.8083325,188.5597454,189.3196931,190.0882554,190.8654747,191.6513525,192.4458466,193.2488681,194.0602778,194.8798829,195.7074339,196.5426204,197.385068,198.2343338,198.9538561,199.6790907,200.4093662,201.1439264,201.8819257,202.6224249,203.3643859,204.1066673,204.8480193,205.5870782,206.3223613,207.0522618,207.7750424,208.4888303,209.1916107,209.8812214,210.5553457,211.2115068,211.8470607,212.4591899,213.0448962,213.6009936,214.1241015,214.6106366,215.0568061,215.4995219,215.9422376]       


    fig, ax = plt.subplots()
    # 在生成的坐标系下画折线图
    ax.plot(CS2_35, linewidth=1,c='b',label="c1")
    ax.plot(CS2_36, linewidth=1,c='g',label="c4")
    ax.plot(CS2_37, linewidth=1,c='y',label="c6")
    ax.plot(CS2_38, linewidth=1,c='r',label="c6")

    # 显示图形
    font1 = { 
    'weight' : 'normal',
    'size' : 14,
    }
        
          
        #设置横纵坐标的名称以及对应字体格式
    font2 = {#'family' : 'Times New Roman',
    'weight' : 'normal',
    'size' : 30,
    }
        
    plt.xlabel('Cycle',font1) #X轴标签
    plt.ylabel("Capacity (Ah)",font1) #Y轴标签
    plt.legend()
    plt.savefig(last_last_last_last_path+r'\figure\by_code\Dataset_IGBT_curves_comparision.eps',dpi=800,format='eps',bbox_inches = 'tight')
    plt.savefig(last_last_last_last_path+r'\figure\by_code\Dataset_IGBT_curves_comparision.png',dpi=800,format='png',bbox_inches = 'tight')
    plt.show()
    
    return CS2_35,CS2_36,CS2_37,CS2_38



CS2_35,CS2_36,CS2_37,CS2_38=get_data_list()
CS2_35,CS2_36,CS2_37,CS2_38=get_data_list()


# print(CS2_35)

CS2_35=list(np.array(CS2_35)-CS2_35[0])
CS2_36=list(np.array(CS2_36)-CS2_36[0])
CS2_37=list(np.array(CS2_37)-CS2_37[0])
CS2_38=list(np.array(CS2_38)-CS2_38[0])

# print(CS2_35)


# print(CS2_35[0])
# print(CS2_36[0])
# print(CS2_37[0])
# print(CS2_38[0])

def get_health_list(CS2_35,shed):
    for i in range(len(CS2_35)):
        if CS2_35[i]>shed: 
            print("aaaaa")                          ########################################   小于门槛值
            CS235=CS2_35[0:i]
            return list(CS235)
        else:
            
            if i==len(CS2_35)-1: 
                print("aaaaa")                          ########################################   小于门槛值
                CS235=CS2_35[0:i]
                return list(CS235)

# CS235=get_health_list(CS2_35,shed) 
# CS236=get_health_list(CS2_36,shed) 
# CS237=get_health_list(CS2_37,shed) 
# CS238=get_health_list(CS2_38,shed)   

# fig, ax = plt.subplots()
# # 在生成的坐标系下画折线图
# ax.plot(CS235, linewidth=1)
# ax.plot(CS236, linewidth=1)
# ax.plot(CS237, linewidth=1)
# ax.plot(CS238, linewidth=1)

# # 显示图形
# plt.show()

def get_input_out_2(CS236,CS237,time_windows):

    
    # CS235_health=get_health_list(CS235,shed) 
    CS237_health=get_health_list(CS237,shed) 
    CS236_health=get_health_list(CS236,shed) 
    # CS235_health[::-1] 
    
    # print(CS235_health)
    
    # CS235_health=list(reversed(CS235_health))
    print(CS236_health)
    
    
    
    CS236_health=list(reversed(CS236_health))
    CS237_health=list(reversed(CS237_health))
    
    # for i in range(time_windows-1-2):
    #     CS235_health.append(0)
        
    for i in range(time_windows-1-2):
        CS236_health.append(0)    
    
    for i in range(time_windows-1-2):
        CS237_health.append(0)
        
    # CS235_health=list(reversed(CS235_health))
    CS236_health=list(reversed(CS236_health))
    CS237_health=list(reversed(CS237_health))   
    
    x_train_list=[]
    y_train_list=[]
    # for i in range(len(CS235_health)-time_windows+1):        
    #     x_train_list.append(np.array(CS235_health[i:i+time_windows]))
    #     y_train_list.append(len(CS235_health)-time_windows+1-1-i) 
               
    for i in range(len(CS236_health)-time_windows+1):        
        x_train_list.append(np.array(CS236_health[i:i+time_windows]))  
        y_train_list.append(len(CS236_health)-time_windows+1-1-i)        
    x_train_array=np.array(x_train_list)
    y_train_array=np.array(y_train_list)
    
    
    x_test_list=[]
    y_test_list=[]
    for i in range(len(CS237_health)-time_windows+1):        
        x_test_list.append(np.array(CS237_health[i:i+time_windows]))
        y_test_list.append(len(CS237_health)-time_windows+1-1-i) 
                  
    x_test_array=np.array(x_test_list)
    y_test_array=np.array(y_test_list)   
    
    return x_train_array , y_train_array , x_test_array ,  y_test_array












def get_input_out_3(CS235,CS236,CS237,time_windows):
    # min_len=min(len(CS235),len(CS236),len(CS237))
    
    # input_list=[]
    # output_list=[]
    
    # true_out_list=[]
    
    CS235_health=get_health_list(CS235,shed) 
    CS237_health=get_health_list(CS237,shed) 
    CS236_health=get_health_list(CS236,shed) 
    # CS235_health[::-1] 
    
    # print(CS235_health)
    
    CS235_health=list(reversed(CS235_health))
    # print(CS23_health)
    
    
    
    CS236_health=list(reversed(CS236_health))
    CS237_health=list(reversed(CS237_health))
    
    for i in range(time_windows-1-2):
        CS235_health.append(0)
        
    for i in range(time_windows-1-2):
        CS236_health.append(0)    
    
    for i in range(time_windows-1-2):
        CS237_health.append(0)
        
    CS235_health=list(reversed(CS235_health))
    CS236_health=list(reversed(CS236_health))
    CS237_health=list(reversed(CS237_health))   
    
    x_train_list=[]
    y_train_list=[]
    for i in range(len(CS235_health)-time_windows+1):        
        x_train_list.append(np.array(CS235_health[i:i+time_windows]))
        y_train_list.append(len(CS235_health)-time_windows+1-1-i) 
               
    for i in range(len(CS236_health)-time_windows+1):        
        x_train_list.append(np.array(CS236_health[i:i+time_windows]))  
        y_train_list.append(len(CS236_health)-time_windows+1-1-i)        
    x_train_array=np.array(x_train_list)
    y_train_array=np.array(y_train_list)
    
    
    x_test_list=[]
    y_test_list=[]
    for i in range(len(CS237_health)-time_windows+1):        
        x_test_list.append(np.array(CS237_health[i:i+time_windows]))
        y_test_list.append(len(CS237_health)-time_windows+1-1-i) 
                  
    x_test_array=np.array(x_test_list)
    y_test_array=np.array(y_test_list)   
    
    return x_train_array , y_train_array , x_test_array ,  y_test_array
    
    
    
    
    
# x_train_array , y_train_array , x_test_array ,  y_test_array=get_input_out_3(CS2_35,CS2_36,CS2_37,20)      

# x_train_array , y_train_array , x_test_array ,  y_test_array=get_input_out_2(CS2_36,CS2_37,20)   








#import tensorflow as tf
import os
import logging
import numpy as np
#from numpy import trans
import matplotlib.pyplot as plt
#import tensorflow as tf
# import CMAPSSDataset
import pandas as pd
import datetime
import keras
from keras.layers import Lambda
import math
import keras.backend as K
import tensorflow as tf
from tfdeterminism import patch
from sklearn.model_selection import train_test_split
from keras.utils.vis_utils import plot_model
patch()
# tf.random.set_seed(0)
#import keras
#flags = tf.flags
#flags.DEFINE_string("weights", None, 'weights of the network')################# the file path of weights
#flags.DEFINE_integer("epochs", 100, 'train epochs')
#flags.DEFINE_integer("batch_size", 32, 'batch size for train/test')
#flags.DEFINE_integer("sequence_length", 32, 'sequence length')
#flags.DEFINE_boolean('debug', False, 'debugging mode or not')
#FLAGS = flags.FLAGS

def root_mean_squared_error(y_true, y_pred):
        return K.sqrt(K.mean(K.square(y_pred - y_true),axis=0))##################  axis=0

def rmse(predictions, targets):
    return np.sqrt(((predictions - targets) ** 2).mean())




    
segment=3



run_times=10



nb_epochs=2000           #200
batch_size=64    ## 64        #####300
# sequence_length=31    ############# min31  max303

patience=50
patience_reduce_lr=20





seed=2



num_filter1=64
num_filter2=128
num_filter3=64



kernel1_size=8
kernel2_size=5
kernel3_size=3



sequence_length=20







             
X_train , Y_train , X_test ,  Y_test =get_input_out_3(CS2_35,CS2_36,CS2_37,sequence_length)  

# rul_pred_array
# [713.244, 713.1562, 712.77234, 712.6178, 712.6362, 712.1615, 711.78345, 711.2615, 708.99744, 708.87, 711.11, 712.4278, 713.49414, 714.25867, 713.402, 711.72095, 711.26874, 710.88086, 710.22986, 709.77014, 709.3306, 710.3753, 711.87366, 711.3405, 709.3842, 706.19525, 702.10974, 699.5227, 699.2441, 698.87585, 701.22906, 703.2003, 700.235, 699.10095, 696.52496, 693.44666, 693.0563, 696.2302, 698.7272, 695.3815, 694.4967, 693.5123, 693.38306, 693.2394, 694.91754, 697.03656, 693.40564, 691.52985, 690.39124, 691.87085, 691.4027, 697.944, 698.5906, 695.2054, 700.6422, 705.2433, 703.1223, 700.4419, 699.7397, 699.2757, 701.4927, 702.37616, 702.47864, 705.78375, 701.02783, 696.3351, 691.7626, 693.1491, 686.65295, 681.7866, 689.0198, 688.1178, 688.4046, 687.5969, 688.75806, 689.65076, 688.8744, 688.23584, 686.7946, 687.5255, 686.79346, 685.3927, 684.9672, 683.8795, 682.6698, 682.51025, 683.8211, 682.92114, 680.70654, 679.4169, 678.1807, 674.47833, 670.88367, 668.7057, 666.5606, 669.7509, 672.69556, 673.4862, 674.9121, 674.3078, 672.216, 671.7014, 670.01697, 668.50116, 666.4166, 669.5475, 673.41077, 674.2728, 671.56934, 666.7858, 657.87476, 652.3662, 652.8141, 659.29144, 664.42487, 661.59357, 659.1002, 657.7722, 653.1403, 647.9372, 651.46344, 654.8484, 656.52966, 660.3795, 665.4159, 665.53253, 663.9164, 661.2416, 662.7247, 663.3247, 664.1227, 667.2366, 669.012, 668.1583, 664.56287, 663.0799, 659.5332, 651.3357, 646.80853, 648.03955, 644.49786, 646.05493, 649.70776, 651.1151, 646.3118, 644.782, 644.1628, 646.97546, 653.35034, 655.55914, 651.2461, 647.23236, 647.4703, 650.45416, 653.9027, 652.37897, 647.29944, 641.7139, 635.1615, 633.4523, 634.6832, 641.3993, 641.96686, 638.1969, 639.8759, 637.06177, 635.131, 631.55237, 631.87006, 635.26575, 638.7335, 642.37933, 646.0248, 648.5171, 647.1953, 645.5355, 645.90814, 645.80865, 646.49054, 647.4532, 649.38434, 647.8402, 644.8619, 643.1564, 643.4628, 637.869, 633.56604, 632.9404, 631.04736, 626.7531, 627.45593, 629.57587, 628.3112, 623.5763, 617.7104, 615.6481, 619.1083, 627.56067, 632.7553, 630.5792, 626.2737, 624.652, 626.09863, 625.9995, 625.6986, 627.5331, 622.86456, 618.31537, 615.52716, 615.3958, 616.89294, 616.6007, 618.57007, 621.04364, 621.85986, 619.1908, 619.1992, 619.8617, 625.7473, 630.04663, 629.1188, 629.27875, 630.44775, 631.568, 629.7825, 627.8963, 627.9581, 626.93616, 627.9811, 630.30066, 633.31964, 631.2836, 626.3009, 627.468, 630.504, 629.2702, 625.2847, 621.13684, 617.03406, 611.2758, 610.44275, 611.9093, 611.60657, 607.73096, 601.79846, 605.56006, 612.6711, 622.30334, 629.7209, 629.4262, 623.1507, 622.5094, 623.0492, 617.2604, 605.971, 601.8469, 599.1995, 599.5541, 597.9122, 595.98914, 589.1527, 584.6663, 583.79626, 585.5099, 594.225, 601.0638, 608.88794, 605.9352, 599.1792, 595.4628, 595.3343, 594.90283, 593.2749, 597.38654, 593.98474, 586.7595, 577.71985, 575.28845, 577.2362, 579.4049, 580.1428, 583.24426, 587.7101, 589.4106, 588.6268, 587.16614, 586.3199, 586.5416, 586.0021, 585.6371, 586.47034, 584.5841, 581.5365, 578.49664, 579.96155, 578.78345, 573.5273, 572.7939, 573.76306, 569.73926, 566.2865, 565.7433, 567.62, 561.5143, 555.05096, 549.80835, 548.40906, 547.1733, 547.8942, 549.353, 552.2807, 555.75916, 554.5836, 553.7981, 553.36707, 554.37335, 550.27716, 546.5861, 548.1832, 549.82166, 547.61584, 541.95703, 538.0464, 541.4823, 544.5839, 547.6454, 549.9669, 552.8439, 553.7388, 553.7318, 553.8903, 553.8476, 552.896, 549.4304, 544.7288, 540.0086, 540.3739, 540.5376, 535.44745, 533.04846, 532.8993, 529.39636, 521.69885, 519.7277, 519.0194, 515.3288, 508.64273, 501.18637, 497.21533, 496.0961, 495.97577, 495.23126, 496.37384, 491.4583, 484.74423, 478.80316, 474.34277, 469.4146, 469.03345, 468.89053, 465.17154, 464.96143, 461.1883, 456.01862, 454.92343, 455.3499, 452.15942, 446.37433, 443.41284, 441.24835, 436.5005, 430.64005, 426.2313, 427.85553, 428.28995, 432.5515, 432.6935, 431.76157, 434.09854, 434.56488, 434.49228, 435.09393, 436.50278, 436.3396, 431.79022, 428.1424, 427.97223, 430.00546, 432.72232, 429.26474, 430.43076, 429.89224, 426.63614, 423.2202, 423.28696, 422.1862, 416.34985, 411.7933, 407.31915, 403.97333, 399.66638, 399.04205, 397.17175, 393.88266, 388.6202, 384.48453, 381.4451, 375.44244, 373.07654, 375.6656, 375.3813, 372.5932, 372.71783, 371.48724, 366.39764, 363.39453, 360.81076, 357.25214, 353.15027, 350.0936, 353.66705, 350.39478, 346.71588, 345.26254, 344.14606, 342.3794, 343.16806, 340.99188, 338.32416, 340.9997, 341.55597, 342.8888, 333.07767, 324.71643, 320.0458, 316.3312, 314.40756, 316.67877, 314.3625, 308.9753, 303.88425, 299.55035, 299.30145, 299.43622, 298.1392, 296.75464, 291.98093, 284.17374, 283.42746, 287.1516, 284.4586, 278.20605, 278.40546, 274.96393, 270.15665, 264.2525, 267.82062, 269.34906, 266.54993, 262.69067, 261.7164, 256.78983, 253.13374, 256.29172, 260.89005, 259.48962, 257.92438, 260.8764, 261.3296, 260.27756, 260.27078, 264.4813, 267.294, 265.554, 264.16806, 265.41373, 265.86288, 262.76962, 259.8485, 263.51636, 262.80365, 261.8983, 255.401, 253.71756, 253.90579, 252.634, 248.46863, 246.09912, 241.2253, 237.07373, 233.98064, 234.85242, 234.5695, 235.1449, 232.24678, 228.7192, 222.28073, 216.94296, 219.00131, 222.97478, 219.77766, 215.06314, 214.49088, 212.39633, 205.1956, 198.69612, 201.54987, 205.50398, 198.35611, 195.1422, 192.6241, 190.18031, 187.43675, 186.1347, 189.1068, 187.79317, 183.29237, 184.31013, 184.47766, 182.97884, 181.37143, 181.35753, 185.40533, 182.61295, 175.84111, 175.50711, 178.02734, 180.84474, 187.77629, 189.38794, 185.81625, 183.46696, 180.11668, 179.86276, 182.08359, 179.6784, 174.4248, 172.5172, 170.37212, 170.69522, 167.39456, 167.28006, 169.23067, 172.59262, 165.2148, 161.39572, 161.88583, 160.81479, 160.64876, 159.30542, 155.43123, 149.88556, 146.71269, 145.40408, 147.36478, 148.45169, 147.17987, 144.73495, 140.19785, 138.08614, 137.14355, 138.66843, 140.37465, 141.23547, 139.433, 138.74422, 138.839, 138.0947, 128.92258, 128.39798, 126.71358, 128.17403, 127.819595, 129.33855, 129.65257, 129.29678, 121.39711, 120.12527, 117.69694, 119.05394, 117.72056, 119.64604, 123.27684, 122.55349, 119.29464, 122.29118, 123.68431, 124.139786, 124.98164, 126.66221, 129.3624, 127.10695, 122.94556, 120.55647, 118.81523, 117.802895, 119.91113, 118.65028, 114.92422, 113.490135, 110.923645, 107.33518, 105.965164, 103.69718, 104.137695, 103.06416, 103.24333, 102.462845, 102.53288, 100.935425, 98.75389, 98.23696, 97.19185, 95.53534, 96.70274, 95.66011, 90.46946, 83.95983, 83.20836, 82.16189, 82.77049, 82.20778, 83.26946, 85.21086, 84.03151, 79.75421, 78.6595, 79.69268, 80.109375, 80.9441, 81.87271, 80.89349, 80.56523, 80.79472, 79.93695, 79.7756, 81.50333, 84.42182, 85.74151, 87.307785, 88.265854, 89.66879, 88.91675, 83.158646, 77.42551, 73.047905, 73.4345, 72.8579, 70.774414, 69.25677, 67.67607, 66.21152, 66.07107, 66.04902, 67.13377, 68.20207, 69.87503, 70.18053, 71.12348, 69.15323, 66.54096, 63.878376, 61.638508, 61.73644, 61.025383, 61.52482, 57.93728, 55.16337, 54.173695, 54.281433, 55.20214, 55.941143, 56.94815, 56.06418, 55.936054, 55.102997, 53.799873, 54.237335, 55.870228, 57.047535, 57.02363, 57.892677, 58.243458, 57.36081, 57.534332, 57.350136, 58.411877, 59.96099, 60.542988, 61.49874, 61.587837, 62.12456, 61.822002, 61.691826, 59.3513, 58.01903, 60.52827, 59.774464, 59.4804, 58.18931, 56.108692, 54.756462, 53.438488, 53.59255, 53.52561, 55.051807, 54.463898, 54.91088, 54.076794, 51.721935, 50.54023, 50.204033, 50.869514, 50.632153, 52.1, 51.59037, 50.37258, 47.418568, 43.07737, 40.435974, 44.509205, 43.924797, 36.716595, 29.19551, 28.993393, 28.50917, 28.568375, 23.621105, 19.200375, 17.296505, 15.499324, 15.344284]
# true_out_array
# [731.0, 730.0, 729.0, 728.0, 727.0, 726.0, 725.0, 724.0, 723.0, 722.0, 721.0, 720.0, 719.0, 718.0, 717.0, 716.0, 715.0, 714.0, 713.0, 712.0, 711.0, 710.0, 709.0, 708.0, 707.0, 706.0, 705.0, 704.0, 703.0, 702.0, 701.0, 700.0, 699.0, 698.0, 697.0, 696.0, 695.0, 694.0, 693.0, 692.0, 691.0, 690.0, 689.0, 688.0, 687.0, 686.0, 685.0, 684.0, 683.0, 682.0, 681.0, 680.0, 679.0, 678.0, 677.0, 676.0, 675.0, 674.0, 673.0, 672.0, 671.0, 670.0, 669.0, 668.0, 667.0, 666.0, 665.0, 664.0, 663.0, 662.0, 661.0, 660.0, 659.0, 658.0, 657.0, 656.0, 655.0, 654.0, 653.0, 652.0, 651.0, 650.0, 649.0, 648.0, 647.0, 646.0, 645.0, 644.0, 643.0, 642.0, 641.0, 640.0, 639.0, 638.0, 637.0, 636.0, 635.0, 634.0, 633.0, 632.0, 631.0, 630.0, 629.0, 628.0, 627.0, 626.0, 625.0, 624.0, 623.0, 622.0, 621.0, 620.0, 619.0, 618.0, 617.0, 616.0, 615.0, 614.0, 613.0, 612.0, 611.0, 610.0, 609.0, 608.0, 607.0, 606.0, 605.0, 604.0, 603.0, 602.0, 601.0, 600.0, 599.0, 598.0, 597.0, 596.0, 595.0, 594.0, 593.0, 592.0, 591.0, 590.0, 589.0, 588.0, 587.0, 586.0, 585.0, 584.0, 583.0, 582.0, 581.0, 580.0, 579.0, 578.0, 577.0, 576.0, 575.0, 574.0, 573.0, 572.0, 571.0, 570.0, 569.0, 568.0, 567.0, 566.0, 565.0, 564.0, 563.0, 562.0, 561.0, 560.0, 559.0, 558.0, 557.0, 556.0, 555.0, 554.0, 553.0, 552.0, 551.0, 550.0, 549.0, 548.0, 547.0, 546.0, 545.0, 544.0, 543.0, 542.0, 541.0, 540.0, 539.0, 538.0, 537.0, 536.0, 535.0, 534.0, 533.0, 532.0, 531.0, 530.0, 529.0, 528.0, 527.0, 526.0, 525.0, 524.0, 523.0, 522.0, 521.0, 520.0, 519.0, 518.0, 517.0, 516.0, 515.0, 514.0, 513.0, 512.0, 511.0, 510.0, 509.0, 508.0, 507.0, 506.0, 505.0, 504.0, 503.0, 502.0, 501.0, 500.0, 499.0, 498.0, 497.0, 496.0, 495.0, 494.0, 493.0, 492.0, 491.0, 490.0, 489.0, 488.0, 487.0, 486.0, 485.0, 484.0, 483.0, 482.0, 481.0, 480.0, 479.0, 478.0, 477.0, 476.0, 475.0, 474.0, 473.0, 472.0, 471.0, 470.0, 469.0, 468.0, 467.0, 466.0, 465.0, 464.0, 463.0, 462.0, 461.0, 460.0, 459.0, 458.0, 457.0, 456.0, 455.0, 454.0, 453.0, 452.0, 451.0, 450.0, 449.0, 448.0, 447.0, 446.0, 445.0, 444.0, 443.0, 442.0, 441.0, 440.0, 439.0, 438.0, 437.0, 436.0, 435.0, 434.0, 433.0, 432.0, 431.0, 430.0, 429.0, 428.0, 427.0, 426.0, 425.0, 424.0, 423.0, 422.0, 421.0, 420.0, 419.0, 418.0, 417.0, 416.0, 415.0, 414.0, 413.0, 412.0, 411.0, 410.0, 409.0, 408.0, 407.0, 406.0, 405.0, 404.0, 403.0, 402.0, 401.0, 400.0, 399.0, 398.0, 397.0, 396.0, 395.0, 394.0, 393.0, 392.0, 391.0, 390.0, 389.0, 388.0, 387.0, 386.0, 385.0, 384.0, 383.0, 382.0, 381.0, 380.0, 379.0, 378.0, 377.0, 376.0, 375.0, 374.0, 373.0, 372.0, 371.0, 370.0, 369.0, 368.0, 367.0, 366.0, 365.0, 364.0, 363.0, 362.0, 361.0, 360.0, 359.0, 358.0, 357.0, 356.0, 355.0, 354.0, 353.0, 352.0, 351.0, 350.0, 349.0, 348.0, 347.0, 346.0, 345.0, 344.0, 343.0, 342.0, 341.0, 340.0, 339.0, 338.0, 337.0, 336.0, 335.0, 334.0, 333.0, 332.0, 331.0, 330.0, 329.0, 328.0, 327.0, 326.0, 325.0, 324.0, 323.0, 322.0, 321.0, 320.0, 319.0, 318.0, 317.0, 316.0, 315.0, 314.0, 313.0, 312.0, 311.0, 310.0, 309.0, 308.0, 307.0, 306.0, 305.0, 304.0, 303.0, 302.0, 301.0, 300.0, 299.0, 298.0, 297.0, 296.0, 295.0, 294.0, 293.0, 292.0, 291.0, 290.0, 289.0, 288.0, 287.0, 286.0, 285.0, 284.0, 283.0, 282.0, 281.0, 280.0, 279.0, 278.0, 277.0, 276.0, 275.0, 274.0, 273.0, 272.0, 271.0, 270.0, 269.0, 268.0, 267.0, 266.0, 265.0, 264.0, 263.0, 262.0, 261.0, 260.0, 259.0, 258.0, 257.0, 256.0, 255.0, 254.0, 253.0, 252.0, 251.0, 250.0, 249.0, 248.0, 247.0, 246.0, 245.0, 244.0, 243.0, 242.0, 241.0, 240.0, 239.0, 238.0, 237.0, 236.0, 235.0, 234.0, 233.0, 232.0, 231.0, 230.0, 229.0, 228.0, 227.0, 226.0, 225.0, 224.0, 223.0, 222.0, 221.0, 220.0, 219.0, 218.0, 217.0, 216.0, 215.0, 214.0, 213.0, 212.0, 211.0, 210.0, 209.0, 208.0, 207.0, 206.0, 205.0, 204.0, 203.0, 202.0, 201.0, 200.0, 199.0, 198.0, 197.0, 196.0, 195.0, 194.0, 193.0, 192.0, 191.0, 190.0, 189.0, 188.0, 187.0, 186.0, 185.0, 184.0, 183.0, 182.0, 181.0, 180.0, 179.0, 178.0, 177.0, 176.0, 175.0, 174.0, 173.0, 172.0, 171.0, 170.0, 169.0, 168.0, 167.0, 166.0, 165.0, 164.0, 163.0, 162.0, 161.0, 160.0, 159.0, 158.0, 157.0, 156.0, 155.0, 154.0, 153.0, 152.0, 151.0, 150.0, 149.0, 148.0, 147.0, 146.0, 145.0, 144.0, 143.0, 142.0, 141.0, 140.0, 139.0, 138.0, 137.0, 136.0, 135.0, 134.0, 133.0, 132.0, 131.0, 130.0, 129.0, 128.0, 127.0, 126.0, 125.0, 124.0, 123.0, 122.0, 121.0, 120.0, 119.0, 118.0, 117.0, 116.0, 115.0, 114.0, 113.0, 112.0, 111.0, 110.0, 109.0, 108.0, 107.0, 106.0, 105.0, 104.0, 103.0, 102.0, 101.0, 100.0, 99.0, 98.0, 97.0, 96.0, 95.0, 94.0, 93.0, 92.0, 91.0, 90.0, 89.0, 88.0, 87.0, 86.0, 85.0, 84.0, 83.0, 82.0, 81.0, 80.0, 79.0, 78.0, 77.0, 76.0, 75.0, 74.0, 73.0, 72.0, 71.0, 70.0, 69.0, 68.0, 67.0, 66.0, 65.0, 64.0, 63.0, 62.0, 61.0, 60.0, 59.0, 58.0, 57.0, 56.0, 55.0, 54.0, 53.0, 52.0, 51.0, 50.0, 49.0, 48.0, 47.0, 46.0, 45.0, 44.0, 43.0, 42.0, 41.0, 40.0, 39.0, 38.0, 37.0, 36.0, 35.0, 34.0, 33.0, 32.0, 31.0, 30.0, 29.0, 28.0, 27.0, 26.0, 25.0, 24.0, 23.0, 22.0, 21.0, 20.0, 19.0, 18.0, 17.0, 16.0, 15.0, 14.0, 13.0, 12.0, 11.0, 10.0, 9.0, 8.0, 7.0, 6.0, 5.0, 4.0, 3.0, 2.0, 1.0, 0.0]
# error_pred_array
# [128.44404296875, 129.1562255859375, 129.57232666015625, 130.21776123046874, 131.03623657226564, 131.361474609375, 131.78346557617186, 132.06145629882812, 130.59747314453125, 131.2699951171875, 134.30995483398436, 136.42778930664062, 138.29417114257814, 139.85870361328125, 139.80201416015626, 138.92095947265625, 139.26876831054688, 139.68087158203124, 139.82987060546876, 140.17011108398438, 140.5306823730469, 142.37528076171876, 144.67363891601562, 144.94056396484376, 143.78418579101563, 141.395263671875, 138.10977783203126, 136.32273559570314, 136.84407958984374, 137.27587280273437, 140.42905883789064, 143.20032348632813, 141.0349609375, 140.7008850097656, 138.9249267578125, 136.6466552734375, 137.05631103515626, 141.0302001953125, 144.32713012695314, 141.7814147949219, 141.69661865234374, 141.51235961914062, 142.18303833007812, 142.83936157226563, 145.3175476074219, 148.23655395507814, 145.4056823730469, 144.32981567382814, 143.99124145507812, 146.2708740234375, 146.60265502929687, 153.9439453125, 155.39049682617187, 152.805322265625, 159.04217529296875, 164.44320068359374, 163.122314453125, 161.24185791015626, 161.33970336914064, 161.6756591796875, 164.69271240234374, 166.376171875, 167.27867431640624, 171.38377685546874, 167.42784423828124, 163.53504638671876, 159.76257934570313, 161.94910278320313, 156.25293579101563, 152.18658447265625, 160.21983032226564, 160.11781005859376, 161.20457763671874, 161.1969421386719, 163.158056640625, 164.8507507324219, 164.8743896484375, 165.03582763671875, 164.39459228515625, 165.92542114257813, 165.99351196289064, 165.3927001953125, 165.76724243164062, 165.4794494628906, 165.06981201171874, 165.7102478027344, 167.82107543945312, 167.7211181640625, 166.30652465820313, 165.81692504882812, 165.3806640625, 162.47828979492186, 159.68365478515625, 158.30562744140624, 156.96064453125, 160.95086059570312, 164.69556884765626, 166.28624267578124, 168.51207275390624, 168.70781860351562, 167.41607055664062, 167.7013671875, 166.81691284179686, 166.10112915039062, 164.81658935546875, 168.7474365234375, 173.4107421875, 175.07284545898438, 173.16929931640624, 169.1858642578125, 161.07476806640625, 156.36621704101563, 157.614111328125, 164.8914306640625, 170.82486572265626, 168.79354248046874, 167.10023803710936, 166.57221069335938, 162.74031982421874, 158.33716430664063, 162.66343383789064, 166.84840087890626, 169.3296875, 173.97955322265625, 179.81593627929686, 180.73256225585936, 179.9164306640625, 178.04166259765626, 180.3246276855469, 181.72474365234376, 183.3226806640625, 187.23653564453124, 189.81199340820314, 189.75829467773437, 186.96285400390624, 186.27989501953124, 183.53319091796874, 176.135693359375, 172.40855102539064, 174.4395263671875, 171.69788208007813, 174.05496215820312, 178.50775756835938, 180.7151123046875, 176.71175537109374, 175.98196411132812, 176.1627990722656, 179.77540283203126, 186.95033569335936, 189.95911865234376, 186.44608154296876, 183.23233032226562, 184.2703125, 188.05416870117188, 192.3027587890625, 191.57894287109374, 187.299462890625, 182.51393432617186, 176.76150512695312, 175.85219116210936, 177.8832580566406, 185.39928588867187, 186.7668212890625, 183.79692993164062, 186.27594604492188, 184.26180419921874, 183.13094482421874, 180.35236206054688, 181.47009887695313, 185.66575927734374, 189.93357543945314, 194.37932739257812, 198.82473754882812, 202.11707763671876, 201.59533081054687, 200.73551025390626, 201.90814819335938, 202.6086669921875, 204.0905334472656, 205.853125, 208.584326171875, 207.840185546875, 205.6618408203125, 204.75636596679686, 205.86284790039062, 201.06906127929688, 197.566015625, 197.74049072265626, 196.64743041992188, 193.15314331054688, 194.65590209960936, 197.5759033203125, 197.11129150390624, 193.17633666992188, 188.1103942871094, 186.8481201171875, 191.10829467773436, 200.36063232421876, 206.35532836914064, 204.979248046875, 201.4736572265625, 200.651904296875, 202.89857788085936, 203.5995361328125, 204.0985595703125, 206.7330749511719, 202.86459350585938, 199.1153991699219, 197.12714233398438, 197.79583740234375, 200.09288330078124, 200.60069580078124, 203.37008056640624, 206.64364013671874, 208.25989990234376, 206.3908203125, 207.1991760253906, 208.6616638183594, 215.34730224609376, 220.44661865234374, 220.31876220703126, 221.2787658691406, 223.2477783203125, 225.16803588867188, 224.18244018554688, 223.0962707519531, 223.95819091796875, 223.7361572265625, 225.5809814453125, 228.70062866210938, 232.5196044921875, 231.28363037109375, 227.1009094238281, 229.06804809570312, 232.90401611328124, 232.47023315429686, 229.2846923828125, 225.93682861328125, 222.6341064453125, 217.67577514648437, 217.64271240234376, 219.90932006835936, 220.40651245117186, 217.33093872070313, 212.1984130859375, 216.7600891113281, 224.6710693359375, 235.10327758789063, 243.3209228515625, 243.8262145996094, 238.3506652832031, 238.50936889648438, 239.84925537109376, 234.86040649414062, 224.3709716796875, 221.04690551757812, 219.19954833984374, 220.35408935546874, 219.5121826171875, 218.38910522460938, 212.35267944335936, 208.6663391113281, 208.59633178710936, 211.1099060058594, 220.62493896484375, 228.26380004882813, 236.88788452148438, 234.73519287109374, 228.77924194335938, 225.8628173828125, 226.5342590332031, 226.90288696289062, 226.07484130859376, 230.986474609375, 228.3847412109375, 221.959521484375, 213.71985473632813, 212.0884582519531, 214.83616333007814, 217.8049072265625, 219.34277954101563, 223.2443115234375, 228.51013793945313, 231.01055908203125, 231.02674560546876, 230.36621704101563, 230.319921875, 231.341650390625, 231.60202026367188, 232.03707885742188, 233.6703125, 232.58411865234376, 230.33648071289062, 228.09664916992188, 230.361572265625, 229.98341674804686, 225.527294921875, 225.59389038085936, 227.36303100585937, 224.13927001953124, 221.486474609375, 221.7433349609375, 224.4200012207031, 219.11431274414062, 213.45095825195312, 209.00838623046874, 208.40909423828126, 207.97328491210936, 209.49424438476564, 211.7530029296875, 215.48071899414063, 219.75919189453126, 219.38366088867187, 219.39805908203124, 219.7670166015625, 221.57329711914062, 218.27713928222656, 215.38619995117188, 217.78320922851563, 220.22161865234375, 218.81575927734374, 213.95699462890624, 210.84642333984374, 215.08223876953124, 218.98389282226563, 222.84539184570312, 225.966943359375, 229.64389038085938, 231.33877563476562, 232.13187255859376, 233.09029541015624, 233.84762573242188, 233.69597778320312, 231.03038024902344, 227.12875671386718, 223.20855407714845, 224.3739013671875, 225.33755493164062, 221.0474884033203, 219.4484619140625, 220.09935913085937, 217.39642333984375, 210.4988006591797, 209.3277130126953, 209.41944580078126, 206.5288055419922, 200.64272766113282, 193.9864044189453, 190.81531982421876, 190.4960479736328, 191.1758270263672, 191.2312774658203, 193.17384643554686, 189.05829467773438, 183.14420166015626, 178.00317993164063, 174.34280395507812, 170.2145751953125, 170.63343505859376, 171.29056396484376, 168.37156982421874, 168.96141967773437, 165.9882781982422, 161.61859741210938, 161.32342529296875, 162.5499053955078, 160.15941467285157, 155.1743133544922, 153.01282348632813, 151.64830627441407, 147.70049133300782, 142.64002075195313, 139.03127746582032, 141.45548095703126, 142.68993530273437, 147.75152282714845, 148.69349365234376, 148.5615661621094, 151.69853820800782, 152.9649200439453, 153.81736450195314, 157.3365936279297, 159.5700653076172, 160.51480407714843, 157.65391540527344, 156.36669921875, 156.91981506347656, 159.59076538085938, 161.93418884277344, 156.6475830078125, 157.63075256347656, 157.8922332763672, 155.43609619140625, 152.82025756835938, 153.6869323730469, 153.38614807128906, 148.3498504638672, 144.593310546875, 140.919140625, 138.3848114013672, 138.43084411621095, 139.2867004394531, 138.78878784179688, 135.881689453125, 130.7374481201172, 125.21468811035156, 123.36256103515625, 120.77804565429688, 121.08883972167969, 123.76382446289062, 124.33162841796874, 122.85722351074219, 122.69735107421874, 120.98337097167969, 118.21698303222657, 117.51797790527344, 115.70404052734375, 113.69694213867187, 111.7427490234375, 110.54600524902344, 113.37464904785156, 110.89859008789062, 108.78515014648437, 108.27554626464844, 107.58105163574218, 108.38932495117187, 110.79601135253907, 109.48285522460938, 107.82490234375, 107.927880859375, 108.97590026855468, 111.93962097167969, 104.71879577636719, 98.88610229492187, 95.48537902832031, 93.4391098022461, 92.43889923095703, 94.54204406738282, 94.04161376953125, 89.48624877929687, 87.54637451171875, 85.1763687133789, 85.46596069335938, 83.41571197509765, 82.24242553710937, 82.65549774169922, 81.96833190917968, 77.42306518554688, 73.37626647949219, 74.61889953613282, 74.33442993164063, 70.08006591796875, 70.17378845214844, 68.523876953125, 67.44596099853516, 64.40172271728515, 62.305781555175784, 62.582759094238284, 62.288308715820314, 59.56385040283203, 58.42617340087891, 56.59038543701172, 57.13045654296875, 58.46919403076172, 62.009735107421875, 62.288961791992186, 62.60346984863281, 63.756675720214844, 64.31104278564453, 63.68323669433594, 65.1746322631836, 68.74009704589844, 72.00096130371094, 73.0018096923828, 74.72274322509766, 76.55504913330078, 76.93199005126954, 74.1617431640625, 71.23601684570312, 73.07925109863281, 74.16602783203125, 74.73312835693359, 67.87274932861328, 64.4855712890625, 64.35745239257812, 64.40265655517578, 62.546145629882815, 61.62525329589844, 58.22956237792969, 54.56965942382813, 53.017523193359374, 52.260223388671875, 51.804151916503905, 52.96812744140625, 50.410589599609374, 48.50082550048828, 46.18961029052734, 43.16055755615234, 42.50442962646484, 43.547607421875, 42.01837005615234, 40.051091003417966, 40.26797637939453, 39.73948364257812, 35.7941177368164, 33.56692810058594, 33.799974060058595, 34.135353088378906, 31.901150512695313, 35.163623046875, 36.728091430664065, 35.85277252197265, 34.73910064697266, 35.26514892578125, 33.18161163330078, 35.66581268310547, 38.808161926269534, 37.1342529296875, 38.10228424072265, 36.09913940429688, 33.47134094238281, 31.581875610351563, 31.80333709716797, 33.94527893066406, 37.12687225341797, 39.096003723144534, 40.56741943359375, 38.86300354003906, 38.79838409423828, 37.158447265625, 35.35722198486328, 34.99322509765625, 30.52393798828125, 29.56664581298828, 30.214495849609374, 31.07225341796875, 35.158688354492185, 36.791377258300784, 37.01826171875, 35.98007659912109, 33.92915802001953, 30.763630676269532, 28.889382934570314, 33.1811767578125, 32.430564880371094, 33.08864288330078, 30.35515594482422, 30.292254638671874, 29.416169738769533, 29.665750122070314, 28.238555908203125, 30.783740234375, 33.424522399902344, 35.67454223632812, 32.70137939453125, 31.500950622558594, 31.14190673828125, 32.862875366210936, 32.80213928222656, 33.91386108398437, 35.51348876953125, 35.19645538330078, 34.090284729003905, 31.9422119140625, 31.731845092773437, 30.219270324707033, 29.38343505859375, 31.694297790527344, 35.45694198608398, 35.507929992675784, 36.740089416503906, 34.987589263916014, 33.60873794555664, 31.36730041503906, 29.463785552978514, 31.421296691894533, 34.578975677490234, 35.89346923828125, 37.41142349243164, 34.549791717529295, 34.44340438842774, 32.61220245361328, 30.436394500732423, 29.689669036865233, 30.471735382080077, 28.523981475830077, 29.39884796142578, 28.60289764404297, 26.280330657958984, 26.365684509277344, 25.228802490234376, 24.91222686767578, 25.318479919433592, 26.076097106933595, 27.41505584716797, 28.35756607055664, 27.798690795898438, 28.33661346435547, 28.374998474121092, 27.666127014160157, 28.767979431152344, 31.29453048706055, 30.258948516845702, 30.296824645996093, 29.947371673583984, 30.238136291503906, 30.971700286865236, 29.090316009521484, 28.796878051757812, 30.330371856689453, 31.1436408996582, 30.836636352539063, 29.630431365966796, 27.953913116455077, 26.47283935546875, 26.084770965576173, 28.61912307739258, 31.80632629394531, 32.24363899230957, 32.92632713317871, 32.293766784667966, 29.404439544677736, 28.091866302490235, 26.69931106567383, 27.80881271362305, 28.237080383300782, 29.41628189086914, 30.58887481689453, 30.57209358215332, 27.072730255126952, 24.282626342773437, 24.19184799194336, 25.151026916503906, 25.748144912719727, 26.460292053222656, 27.08810501098633, 26.49458236694336, 26.118693542480468, 26.133878326416017, 23.82370834350586, 23.8682861328125, 24.35929946899414, 24.204568481445314, 22.88933410644531, 23.439949417114256, 24.84860610961914, 23.697040557861328, 21.685837173461913, 20.62164649963379, 19.64074287414551, 21.276799392700195, 22.3033390045166, 20.912229156494142, 19.005928421020506, 18.23721389770508, 19.668947601318358, 20.3134407043457, 18.602231979370117, 18.784926223754884, 17.733196258544922, 19.60085563659668, 17.897478103637695, 15.909258270263672, 15.024677658081055, 16.250395202636717, 16.844846725463867, 17.259196853637697, 17.483677291870116, 17.413933944702148, 17.06965866088867, 15.612966537475586, 13.30797233581543, 13.638027954101563, 15.00291748046875, 15.96730842590332, 15.564126968383789, 15.092281723022461, 15.439710998535157, 17.067489624023438, 17.219091796875, 17.09698028564453, 18.12844467163086, 19.08882865905762, 18.960807418823244, 20.043313598632814, 20.550130462646486, 22.56386604309082, 24.76099052429199, 26.142984771728514, 27.89873924255371, 28.787831115722657, 30.124557876586913, 30.622003173828126, 31.29182662963867, 29.751293563842772, 29.219031524658202, 32.52827262878418, 32.574463272094725, 33.08040237426758, 32.58930587768555, 31.308691787719727, 30.75646553039551, 30.23848648071289, 31.192547225952147, 31.925611877441405, 34.25181083679199, 34.46389884948731, 35.71088409423828, 35.67679214477539, 34.12193336486816, 33.740227127075194, 34.20403289794922, 35.66951789855957, 36.23215293884277, 38.499999618530275, 38.79036903381348, 38.372582244873044, 36.21856575012207, 32.67736930847168, 30.835976219177248, 35.70920181274414, 35.92479496002197, 29.516596603393555, 22.79550838470459, 23.393392753601074, 23.709171104431153, 24.568376541137695, 20.421105766296385, 16.800374507904053, 15.696505260467529, 14.699323272705078, 15.344282913208009]



# X_train , Y_train , X_test ,  Y_test =get_input_out_2(CS2_36,CS2_37,sequence_length) 

# rul_pred_array
# [837.80176, 837.24915, 836.0985, 835.1865, 834.171, 831.6792, 830.0959, 828.72284, 827.1708, 828.74915, 833.5259, 837.6029, 839.40125, 838.516, 835.5311, 834.0419, 834.4539, 834.3083, 834.4248, 835.0781, 836.8628, 840.0043, 841.5062, 841.3164, 840.7996, 835.9998, 831.28827, 828.24133, 825.0877, 823.05615, 827.07684, 830.9129, 826.1222, 820.116, 816.5462, 812.44714, 812.2042, 818.64197, 821.87415, 817.87054, 814.32324, 814.03235, 814.24255, 815.6897, 818.61096, 819.88855, 816.17413, 814.18555, 813.46625, 811.41705, 809.61316, 823.10614, 827.9305, 832.0934, 838.3833, 835.25684, 826.89685, 824.1669, 824.80615, 826.2469, 825.97375, 825.47644, 826.2298, 829.8377, 824.3927, 814.0811, 804.9259, 803.8266, 798.60583, 794.55994, 788.93463, 787.74695, 787.10266, 786.9579, 788.6291, 789.12146, 788.7956, 788.65594, 787.98376, 787.7869, 787.4193, 785.84863, 784.2899, 783.3592, 782.6781, 782.5883, 782.7114, 781.39197, 778.50653, 776.30554, 774.43774, 769.98376, 765.09827, 761.0909, 758.27893, 762.47253, 766.6632, 768.11035, 771.1355, 771.82855, 769.9547, 768.65063, 767.7777, 767.20184, 768.2813, 776.0491, 783.0934, 784.0543, 778.5939, 769.866, 759.96466, 755.77185, 755.9667, 759.7628, 763.4088, 761.4069, 759.246, 755.4714, 751.8372, 746.307, 746.9851, 749.64575, 754.19836, 763.266, 768.8457, 768.3845, 765.516, 761.75653, 762.1595, 765.52185, 769.8377, 774.5597, 776.60443, 774.9713, 769.2555, 765.879, 761.5434, 754.5543, 750.92426, 748.6974, 744.4597, 747.07733, 751.97485, 751.05237, 744.63635, 741.6457, 739.8928, 743.1419, 748.3386, 748.71643, 746.2126, 743.7751, 749.9761, 755.4025, 760.1794, 755.59424, 747.63696, 744.9779, 743.6888, 744.02216, 738.1444, 739.98865, 741.2545, 739.688, 741.96063, 740.3068, 738.9793, 733.61755, 732.89575, 735.01324, 737.87366, 744.0665, 750.4198, 752.5987, 749.7184, 745.22296, 743.4749, 745.1821, 748.05664, 752.5392, 755.74335, 752.3256, 746.1864, 742.79474, 742.8424, 738.0526, 734.63293, 733.69006, 729.743, 724.3812, 727.11395, 730.4349, 725.73474, 719.5135, 713.78235, 711.3633, 714.5849, 724.1707, 726.0887, 723.68536, 719.73676, 723.77185, 731.1858, 732.5577, 727.0497, 725.54175, 722.8721, 724.2011, 725.693, 721.3984, 713.9076, 713.63477, 719.02893, 720.92004, 722.9181, 721.7645, 723.63544, 723.1545, 725.8424, 726.0764, 726.098, 727.3862, 732.78644, 737.1093, 731.4772, 724.819, 724.57214, 727.36707, 733.7621, 736.74805, 735.2433, 729.8451, 725.99896, 728.2697, 732.671, 730.26196, 724.553, 719.4757, 713.83203, 706.24524, 706.07556, 708.5496, 705.8734, 700.6906, 694.7765, 698.49963, 706.4443, 714.70337, 720.0395, 719.0912, 711.4469, 717.6629, 726.08875, 722.4636, 707.59314, 700.13947, 700.2371, 705.937, 705.33014, 696.8265, 680.61725, 674.3334, 675.8751, 679.6162, 680.45056, 686.2073, 699.19617, 705.1449, 702.249, 694.6117, 690.85284, 693.4259, 698.31506, 701.0963, 694.381, 690.0285, 685.5152, 681.71985, 678.55133, 679.72156, 679.5952, 680.9029, 686.68896, 692.74646, 694.7502, 691.7017, 688.0243, 686.4175, 684.2723, 683.68665, 687.05927, 688.0519, 685.1408, 680.30676, 680.0392, 679.203, 674.10754, 673.06757, 670.85266, 663.4579, 660.07086, 661.6087, 664.3247, 658.4527, 653.60754, 648.4374, 645.88525, 642.9193, 647.4533, 647.6902, 648.9184, 655.72864, 661.09174, 662.8973, 660.25824, 658.77124, 651.9669, 645.95404, 641.4798, 643.6891, 645.3373, 644.35846, 639.1144, 640.7921, 647.9606, 656.98364, 662.3551, 665.0342, 662.33374, 658.2845, 654.632, 651.263, 652.33466, 651.2839, 645.83057, 638.94165, 637.42145, 637.6391, 632.96716, 628.61066, 625.057, 617.15515, 607.1124, 606.40765, 606.7627, 603.7588, 599.1633, 595.5037, 592.4302, 589.8393, 594.1935, 594.7594, 594.3848, 589.8862, 584.2606, 581.8957, 577.9967, 575.41486, 574.81323, 572.1382, 564.6007, 564.935, 565.2028, 562.3564, 564.17267, 565.2894, 555.48615, 544.46985, 541.6184, 542.78, 539.9745, 540.6187, 536.6134, 532.9326, 534.992, 539.6227, 541.6517, 540.8759, 540.4313, 538.4404, 535.7714, 536.2209, 537.91956, 539.75793, 536.50055, 533.95984, 533.32874, 534.3157, 535.5425, 529.07684, 529.19293, 527.3878, 523.2802, 517.39795, 519.9137, 521.82117, 516.69824, 511.86084, 510.09515, 507.99042, 503.3416, 505.612, 508.00235, 511.09024, 506.8199, 499.01456, 493.63516, 488.65527, 484.68814, 488.91644, 492.49506, 490.09464, 489.3327, 486.55963, 481.72565, 477.89062, 473.54794, 468.58148, 465.17743, 457.8881, 461.88077, 465.0978, 468.0187, 469.15268, 465.9466, 460.5245, 457.95782, 448.4376, 445.6657, 447.6626, 447.4087, 448.13672, 440.1419, 429.206, 417.83276, 410.1504, 402.2289, 403.70035, 399.9311, 385.98904, 370.2232, 361.2846, 357.2215, 350.3539, 337.56946, 341.03964, 349.50006, 342.4695, 330.21597, 324.4836, 323.48126, 318.607, 316.2666, 322.44763, 327.63644, 317.72977, 307.72253, 305.83047, 309.39008, 305.17157, 306.18823, 311.93277, 317.1166, 318.5666, 315.66107, 315.3028, 317.08438, 319.15094, 316.88544, 316.11615, 317.4477, 314.2443, 310.57816, 309.8604, 310.06833, 309.6522, 308.2667, 303.12314, 298.10745, 296.00406, 295.6236, 298.24164, 291.21344, 284.68805, 282.92078, 283.36652, 280.23514, 279.29538, 283.66913, 284.80566, 278.15463, 274.29877, 273.7735, 274.1728, 266.60797, 265.63663, 269.96237, 269.29, 262.02777, 254.71655, 254.32861, 257.1684, 254.08496, 251.00009, 248.8509, 247.51059, 244.7972, 238.3995, 241.2109, 243.4803, 238.43742, 240.2468, 247.16353, 256.4035, 257.5721, 253.87263, 252.46355, 247.14302, 240.34244, 236.79861, 234.01321, 230.16426, 224.40865, 220.68164, 217.1976, 216.90457, 217.57133, 219.36206, 220.85445, 223.63394, 220.04932, 221.4126, 223.48564, 215.58223, 213.97168, 218.74963, 212.65393, 209.27693, 213.51538, 223.19809, 219.27303, 207.41757, 204.41428, 208.11926, 202.10565, 203.76837, 206.14401, 204.57497, 199.64435, 194.41296, 185.01364, 179.24785, 180.00243, 178.63344, 177.56592, 180.66995, 190.8287, 185.23721, 173.443, 170.01222, 171.9204, 172.43979, 166.97333, 167.90237, 172.20445, 167.35245, 159.11557, 152.87354, 148.34, 148.05777, 145.93689, 150.0643, 153.3365, 152.08842, 145.25537, 139.10936, 136.17459, 133.54681, 131.36452, 136.02701, 141.73312, 144.29788, 145.52328, 144.09383, 143.05441, 140.90955, 141.65207, 142.61777, 143.05325, 142.13441, 140.08275, 139.749, 139.21175, 135.5651, 131.44594, 130.41434, 133.28102, 134.03891, 129.08243, 124.14127, 121.78352, 118.52834, 116.22025, 114.89071, 117.4739, 122.4624, 125.23069, 119.878174, 115.19771, 113.853195, 109.7183, 106.796486, 110.15104, 111.5376, 113.53227, 109.74314, 104.40353, 100.48576, 99.54789, 96.54811, 95.850975, 99.040726, 101.072136, 104.11758, 105.560745, 98.821815, 94.70805, 94.50092, 93.032394, 93.755356, 97.3617, 99.48755, 100.01741, 99.60188, 97.74243, 98.64872, 98.56181, 99.196655, 100.063965, 101.35634, 101.67732, 100.95293, 101.127594, 95.87315, 90.71084, 88.89375, 89.44081, 89.83371, 89.904655, 88.566956, 86.29763, 85.30243, 84.03261, 83.97205, 85.75832, 87.39823, 89.20949, 88.45851, 86.41845, 84.415306, 81.50712, 77.80872, 77.339676, 79.81583, 81.13301, 81.05561, 77.23153, 72.89038, 72.391945, 71.07969, 70.87498, 72.261375, 75.0746, 76.70819, 76.56844, 73.12854, 71.438965, 70.28694, 71.26936, 72.242935, 74.03232, 75.545364, 76.54635, 76.94473, 75.84058, 74.42658, 75.3491, 76.233475, 76.89633, 78.132034, 78.789154, 78.465004, 77.8358, 78.098366, 76.230125, 74.119095, 76.35391, 77.10805, 78.140526, 76.72907, 73.803, 73.808334, 72.25221, 70.95018, 70.440605, 72.982834, 75.666725, 77.45668, 74.26027, 71.673676, 70.28499, 68.34596, 67.44149, 67.59604, 70.240616, 71.528824, 71.34795, 66.34916, 61.83895, 59.476116, 61.63697, 61.775856, 58.013466, 54.73246, 54.357708, 50.997528, 50.980225, 44.46351, 38.584133, 37.092083, 36.34773, 37.76707]
# true_out_array
# [731.0, 730.0, 729.0, 728.0, 727.0, 726.0, 725.0, 724.0, 723.0, 722.0, 721.0, 720.0, 719.0, 718.0, 717.0, 716.0, 715.0, 714.0, 713.0, 712.0, 711.0, 710.0, 709.0, 708.0, 707.0, 706.0, 705.0, 704.0, 703.0, 702.0, 701.0, 700.0, 699.0, 698.0, 697.0, 696.0, 695.0, 694.0, 693.0, 692.0, 691.0, 690.0, 689.0, 688.0, 687.0, 686.0, 685.0, 684.0, 683.0, 682.0, 681.0, 680.0, 679.0, 678.0, 677.0, 676.0, 675.0, 674.0, 673.0, 672.0, 671.0, 670.0, 669.0, 668.0, 667.0, 666.0, 665.0, 664.0, 663.0, 662.0, 661.0, 660.0, 659.0, 658.0, 657.0, 656.0, 655.0, 654.0, 653.0, 652.0, 651.0, 650.0, 649.0, 648.0, 647.0, 646.0, 645.0, 644.0, 643.0, 642.0, 641.0, 640.0, 639.0, 638.0, 637.0, 636.0, 635.0, 634.0, 633.0, 632.0, 631.0, 630.0, 629.0, 628.0, 627.0, 626.0, 625.0, 624.0, 623.0, 622.0, 621.0, 620.0, 619.0, 618.0, 617.0, 616.0, 615.0, 614.0, 613.0, 612.0, 611.0, 610.0, 609.0, 608.0, 607.0, 606.0, 605.0, 604.0, 603.0, 602.0, 601.0, 600.0, 599.0, 598.0, 597.0, 596.0, 595.0, 594.0, 593.0, 592.0, 591.0, 590.0, 589.0, 588.0, 587.0, 586.0, 585.0, 584.0, 583.0, 582.0, 581.0, 580.0, 579.0, 578.0, 577.0, 576.0, 575.0, 574.0, 573.0, 572.0, 571.0, 570.0, 569.0, 568.0, 567.0, 566.0, 565.0, 564.0, 563.0, 562.0, 561.0, 560.0, 559.0, 558.0, 557.0, 556.0, 555.0, 554.0, 553.0, 552.0, 551.0, 550.0, 549.0, 548.0, 547.0, 546.0, 545.0, 544.0, 543.0, 542.0, 541.0, 540.0, 539.0, 538.0, 537.0, 536.0, 535.0, 534.0, 533.0, 532.0, 531.0, 530.0, 529.0, 528.0, 527.0, 526.0, 525.0, 524.0, 523.0, 522.0, 521.0, 520.0, 519.0, 518.0, 517.0, 516.0, 515.0, 514.0, 513.0, 512.0, 511.0, 510.0, 509.0, 508.0, 507.0, 506.0, 505.0, 504.0, 503.0, 502.0, 501.0, 500.0, 499.0, 498.0, 497.0, 496.0, 495.0, 494.0, 493.0, 492.0, 491.0, 490.0, 489.0, 488.0, 487.0, 486.0, 485.0, 484.0, 483.0, 482.0, 481.0, 480.0, 479.0, 478.0, 477.0, 476.0, 475.0, 474.0, 473.0, 472.0, 471.0, 470.0, 469.0, 468.0, 467.0, 466.0, 465.0, 464.0, 463.0, 462.0, 461.0, 460.0, 459.0, 458.0, 457.0, 456.0, 455.0, 454.0, 453.0, 452.0, 451.0, 450.0, 449.0, 448.0, 447.0, 446.0, 445.0, 444.0, 443.0, 442.0, 441.0, 440.0, 439.0, 438.0, 437.0, 436.0, 435.0, 434.0, 433.0, 432.0, 431.0, 430.0, 429.0, 428.0, 427.0, 426.0, 425.0, 424.0, 423.0, 422.0, 421.0, 420.0, 419.0, 418.0, 417.0, 416.0, 415.0, 414.0, 413.0, 412.0, 411.0, 410.0, 409.0, 408.0, 407.0, 406.0, 405.0, 404.0, 403.0, 402.0, 401.0, 400.0, 399.0, 398.0, 397.0, 396.0, 395.0, 394.0, 393.0, 392.0, 391.0, 390.0, 389.0, 388.0, 387.0, 386.0, 385.0, 384.0, 383.0, 382.0, 381.0, 380.0, 379.0, 378.0, 377.0, 376.0, 375.0, 374.0, 373.0, 372.0, 371.0, 370.0, 369.0, 368.0, 367.0, 366.0, 365.0, 364.0, 363.0, 362.0, 361.0, 360.0, 359.0, 358.0, 357.0, 356.0, 355.0, 354.0, 353.0, 352.0, 351.0, 350.0, 349.0, 348.0, 347.0, 346.0, 345.0, 344.0, 343.0, 342.0, 341.0, 340.0, 339.0, 338.0, 337.0, 336.0, 335.0, 334.0, 333.0, 332.0, 331.0, 330.0, 329.0, 328.0, 327.0, 326.0, 325.0, 324.0, 323.0, 322.0, 321.0, 320.0, 319.0, 318.0, 317.0, 316.0, 315.0, 314.0, 313.0, 312.0, 311.0, 310.0, 309.0, 308.0, 307.0, 306.0, 305.0, 304.0, 303.0, 302.0, 301.0, 300.0, 299.0, 298.0, 297.0, 296.0, 295.0, 294.0, 293.0, 292.0, 291.0, 290.0, 289.0, 288.0, 287.0, 286.0, 285.0, 284.0, 283.0, 282.0, 281.0, 280.0, 279.0, 278.0, 277.0, 276.0, 275.0, 274.0, 273.0, 272.0, 271.0, 270.0, 269.0, 268.0, 267.0, 266.0, 265.0, 264.0, 263.0, 262.0, 261.0, 260.0, 259.0, 258.0, 257.0, 256.0, 255.0, 254.0, 253.0, 252.0, 251.0, 250.0, 249.0, 248.0, 247.0, 246.0, 245.0, 244.0, 243.0, 242.0, 241.0, 240.0, 239.0, 238.0, 237.0, 236.0, 235.0, 234.0, 233.0, 232.0, 231.0, 230.0, 229.0, 228.0, 227.0, 226.0, 225.0, 224.0, 223.0, 222.0, 221.0, 220.0, 219.0, 218.0, 217.0, 216.0, 215.0, 214.0, 213.0, 212.0, 211.0, 210.0, 209.0, 208.0, 207.0, 206.0, 205.0, 204.0, 203.0, 202.0, 201.0, 200.0, 199.0, 198.0, 197.0, 196.0, 195.0, 194.0, 193.0, 192.0, 191.0, 190.0, 189.0, 188.0, 187.0, 186.0, 185.0, 184.0, 183.0, 182.0, 181.0, 180.0, 179.0, 178.0, 177.0, 176.0, 175.0, 174.0, 173.0, 172.0, 171.0, 170.0, 169.0, 168.0, 167.0, 166.0, 165.0, 164.0, 163.0, 162.0, 161.0, 160.0, 159.0, 158.0, 157.0, 156.0, 155.0, 154.0, 153.0, 152.0, 151.0, 150.0, 149.0, 148.0, 147.0, 146.0, 145.0, 144.0, 143.0, 142.0, 141.0, 140.0, 139.0, 138.0, 137.0, 136.0, 135.0, 134.0, 133.0, 132.0, 131.0, 130.0, 129.0, 128.0, 127.0, 126.0, 125.0, 124.0, 123.0, 122.0, 121.0, 120.0, 119.0, 118.0, 117.0, 116.0, 115.0, 114.0, 113.0, 112.0, 111.0, 110.0, 109.0, 108.0, 107.0, 106.0, 105.0, 104.0, 103.0, 102.0, 101.0, 100.0, 99.0, 98.0, 97.0, 96.0, 95.0, 94.0, 93.0, 92.0, 91.0, 90.0, 89.0, 88.0, 87.0, 86.0, 85.0, 84.0, 83.0, 82.0, 81.0, 80.0, 79.0, 78.0, 77.0, 76.0, 75.0, 74.0, 73.0, 72.0, 71.0, 70.0, 69.0, 68.0, 67.0, 66.0, 65.0, 64.0, 63.0, 62.0, 61.0, 60.0, 59.0, 58.0, 57.0, 56.0, 55.0, 54.0, 53.0, 52.0, 51.0, 50.0, 49.0, 48.0, 47.0, 46.0, 45.0, 44.0, 43.0, 42.0, 41.0, 40.0, 39.0, 38.0, 37.0, 36.0, 35.0, 34.0, 33.0, 32.0, 31.0, 30.0, 29.0, 28.0, 27.0, 26.0, 25.0, 24.0, 23.0, 22.0, 21.0, 20.0, 19.0, 18.0, 17.0, 16.0, 15.0, 14.0, 13.0, 12.0, 11.0, 10.0, 9.0, 8.0, 7.0, 6.0, 5.0, 4.0, 3.0, 2.0, 1.0, 0.0]
# error_pred_array
# [106.8017578125, 107.24916381835938, 107.09857788085938, 107.18652954101563, 107.17105712890626, 105.679150390625, 105.09588623046875, 104.722900390625, 104.17068481445312, 106.74915161132813, 112.5259033203125, 117.60294189453126, 120.4012939453125, 120.51604614257812, 118.531201171875, 118.04191284179687, 119.45393676757813, 120.308251953125, 121.4248046875, 123.0781982421875, 125.86275634765624, 130.00436401367188, 132.5062683105469, 133.3163635253906, 133.7996032714844, 129.99985961914064, 126.28825073242187, 124.241259765625, 122.08763427734375, 121.05615234375, 126.07679443359375, 130.9129638671875, 127.12218627929687, 122.11602172851562, 119.54619140625, 116.44710083007813, 117.20416259765625, 124.6419189453125, 128.87418212890626, 125.87058715820312, 123.323291015625, 124.03239135742187, 125.24253540039062, 127.6897705078125, 131.61094970703124, 133.88858032226562, 131.1741516113281, 130.18557739257812, 130.466259765625, 129.41697998046874, 128.61314697265624, 143.10620727539063, 148.93040771484374, 154.093310546875, 161.38328857421874, 159.25676879882812, 153.34186401367188, 153.0009338378906, 154.77952270507814, 154.2467834472656, 154.97373046875, 155.47647094726562, 157.2298583984375, 161.83776245117187, 157.39271240234376, 148.08115844726564, 139.92596435546875, 139.82662353515624, 135.60584106445313, 132.55995483398436, 128.39576416015626, 129.30995483398436, 128.9197570800781, 129.02015380859376, 131.6291015625, 133.12144165039064, 133.79563598632814, 134.65589599609376, 134.9836853027344, 135.78692626953125, 136.41942749023437, 135.84865112304686, 135.2898742675781, 135.3591552734375, 135.678125, 136.58834228515624, 137.71140747070314, 137.39193115234374, 135.50650024414062, 134.30554809570313, 133.43773193359374, 129.983740234375, 126.09824829101562, 123.090869140625, 121.27896728515626, 126.47249145507813, 131.66317749023438, 134.11036376953126, 138.1355224609375, 139.82849731445313, 138.95473022460936, 138.65062255859374, 138.77760009765626, 139.20184936523438, 141.28125610351563, 150.04909057617186, 158.093359375, 160.05431518554687, 155.5939208984375, 147.86602172851562, 138.9646423339844, 135.77183837890624, 136.9666748046875, 141.76278686523438, 146.40884399414062, 145.40692749023438, 144.246044921875, 141.47144165039063, 138.8371337890625, 134.30701904296876, 135.98505249023438, 141.79879760742188, 148.11781005859376, 155.26597900390624, 161.8457458496094, 162.38451538085937, 160.51602172851562, 157.75650634765626, 159.15952758789064, 163.5218505859375, 168.8377197265625, 174.559619140625, 177.6044189453125, 176.97130126953124, 172.2554504394531, 169.879052734375, 166.54342651367188, 160.55439453125, 157.9242431640625, 156.6973449707031, 153.459716796875, 157.07733764648438, 162.97486572265626, 163.05238647460936, 157.6363525390625, 155.6457092285156, 154.89284057617186, 159.14182739257814, 165.3385986328125, 166.71649169921875, 165.98580322265624, 163.775048828125, 170.97605590820314, 177.4025390625, 183.17938842773438, 179.59425659179686, 172.63693237304688, 170.97788696289064, 170.6887939453125, 172.0221923828125, 167.1444580078125, 169.98863525390624, 172.2545654296875, 171.97409057617188, 174.96064453125, 174.30679321289062, 173.97936401367187, 169.61762084960938, 169.89578857421876, 173.01317138671874, 176.9396728515625, 184.0664794921875, 191.419921875, 194.59866943359376, 192.71838989257813, 189.2229431152344, 188.47494506835938, 191.18211059570314, 195.05662841796874, 200.53916015625, 204.74340209960937, 202.32561645507812, 197.18637084960938, 194.794775390625, 195.84238891601564, 192.05261840820313, 189.63292846679687, 189.690087890625, 186.74298706054688, 182.38124389648436, 186.11392211914062, 190.43483276367186, 186.73477783203126, 181.5135009765625, 176.7824279785156, 175.36327514648437, 179.58489990234375, 190.1707763671875, 196.873583984375, 198.3995788574219, 192.51524047851564, 193.77179565429688, 202.18579711914063, 204.55764770507812, 200.049755859375, 199.54173583984374, 197.8720275878906, 200.201123046875, 202.69306030273438, 199.39838256835938, 192.90757446289064, 193.63469848632812, 200.0288818359375, 202.9200927734375, 205.9181396484375, 205.76450805664064, 208.63541259765626, 209.154443359375, 212.8423645019531, 214.07640380859374, 215.0979736328125, 217.38623046875, 223.78648681640624, 229.1092956542969, 224.47726440429688, 218.8189453125, 219.5721923828125, 223.36707763671876, 230.76204833984374, 234.74806518554686, 234.2433349609375, 229.8450439453125, 226.9989990234375, 230.26968383789062, 235.67100830078124, 234.2619384765625, 229.55297241210937, 225.4757568359375, 220.8319580078125, 214.24515380859376, 215.07557373046876, 218.5496032714844, 216.87337646484374, 212.69066162109374, 207.77647705078124, 212.4995910644531, 221.44427490234375, 230.7033935546875, 237.03948974609375, 237.09111633300782, 230.44684448242188, 237.6629150390625, 247.08877563476562, 244.46361083984374, 230.5930908203125, 224.139453125, 225.2371032714844, 231.93701782226563, 232.33006591796874, 224.82645263671876, 209.61727600097657, 204.33335876464844, 206.87513122558593, 211.6161682128906, 213.45057983398436, 220.20721435546875, 234.19617919921876, 241.14498901367188, 239.24900512695314, 232.61168212890624, 229.85286865234374, 233.42586669921874, 239.31504516601564, 243.09632568359376, 237.38095092773438, 234.02857666015626, 230.51520080566405, 227.71993408203124, 225.55133056640625, 227.72156372070313, 228.59523010253906, 230.9028778076172, 237.68890686035155, 244.74642944335938, 247.75022583007814, 245.701708984375, 243.0243347167969, 242.41748046875, 241.27228393554688, 241.6866424560547, 246.05927429199218, 248.05186462402344, 246.14089965820312, 242.30682983398438, 243.03912963867188, 243.2030029296875, 239.10759582519532, 239.06760864257814, 237.85259704589845, 231.45787963867187, 229.0707977294922, 231.60869750976562, 235.32467041015624, 230.45263061523437, 226.60755004882813, 222.43735961914064, 220.88528137207032, 218.9193145751953, 224.45324096679687, 225.69020080566406, 227.91840209960938, 235.72862548828124, 242.0917236328125, 244.8972595214844, 243.25823669433595, 242.7712829589844, 236.96685180664062, 231.95407409667968, 228.4798126220703, 231.68909301757813, 234.33731079101562, 234.3584716796875, 230.1144226074219, 232.7921142578125, 240.96051635742188, 250.98364868164063, 257.3550537109375, 261.0341827392578, 259.3337371826172, 256.2845489501953, 253.63208923339843, 251.26297912597656, 253.33463134765626, 253.28392028808594, 248.8305694580078, 242.9416961669922, 242.42147521972657, 243.63910827636718, 239.96717834472656, 236.61067810058594, 234.05697021484374, 227.15514221191407, 219.05592346191406, 219.67520446777343, 220.3845672607422, 218.2250213623047, 216.08983154296874, 214.55523681640625, 211.94017944335937, 208.79502563476564, 213.193505859375, 214.759423828125, 215.38479614257812, 211.88626708984376, 207.2621276855469, 209.0108673095703, 206.70924072265626, 204.54959106445312, 203.4871032714844, 200.42527770996094, 193.78063049316407, 194.9349395751953, 198.00064697265626, 196.13331604003906, 197.17262268066406, 199.28938903808594, 190.48612060546876, 180.46985778808593, 178.94498596191406, 182.30372314453126, 182.17596740722655, 183.37083129882814, 178.88883056640626, 174.93262939453126, 177.99194946289063, 183.62265014648438, 186.6516906738281, 186.87590637207032, 187.43128967285156, 186.44041442871094, 184.77142333984375, 186.22093200683594, 188.91959228515626, 191.75789794921874, 189.50049438476563, 187.9597900390625, 188.32879333496095, 190.31566162109374, 192.54249877929686, 187.0768280029297, 190.5132598876953, 192.28074340820314, 190.25094604492188, 186.3477783203125, 188.43851623535156, 189.0863067626953, 183.9326934814453, 180.43062438964844, 179.03975830078124, 175.9904815673828, 172.34158020019532, 175.61199951171875, 179.00237731933595, 183.0902587890625, 179.81983947753906, 173.01455993652343, 168.6351104736328, 164.6552764892578, 161.68812255859376, 166.91649169921874, 171.495068359375, 170.09461364746093, 170.3326843261719, 168.55962524414062, 164.7256591796875, 161.89059448242188, 158.54799194335936, 154.58148498535155, 152.17744140625, 145.88811950683595, 150.88079528808595, 155.09781188964843, 159.01866760253907, 161.1527130126953, 158.9465362548828, 154.52452087402344, 152.95787658691407, 144.4376007080078, 142.6656707763672, 145.66258850097657, 146.40871887207032, 148.13670349121094, 141.14189758300782, 131.87977905273436, 123.6688720703125, 118.89546813964844, 113.04057312011719, 114.23306884765626, 110.44611511230468, 97.51891784667968, 85.08323364257812, 78.68525085449218, 75.26891784667968, 69.14007415771485, 59.50851287841797, 60.639642333984376, 68.37369995117187, 62.735595703125, 54.932237243652345, 51.954647827148435, 51.54478912353515, 48.50131530761719, 49.14748077392578, 55.10923614501953, 60.109623718261716, 51.883201599121094, 45.67605438232422, 44.85676574707031, 47.547821044921875, 47.58889617919922, 48.23987731933594, 54.58482360839844, 59.22719116210938, 60.001705932617185, 55.666220092773436, 54.1843994140625, 55.517295837402344, 57.72265777587891, 55.46001434326172, 54.91736755371094, 56.44767456054687, 54.2442626953125, 51.57813415527344, 51.860400390625, 53.068338012695314, 53.72517852783203, 53.53219146728516, 50.85009613037109, 48.34832916259766, 46.63679962158203, 46.587641906738284, 48.92315826416016, 45.197218322753905, 42.47053527832031, 42.42797698974609, 43.77884063720703, 42.41496276855469, 43.43930206298828, 47.83823852539062, 49.602532958984376, 44.99979858398437, 44.47834167480469, 45.724876403808594, 46.012307739257814, 41.54290924072266, 39.32746124267578, 44.60581665039062, 46.11036376953125, 40.866015625, 39.80544586181641, 38.91185607910156, 43.62619171142578, 43.48525543212891, 40.63693695068359, 39.722059631347655, 40.381719970703124, 40.92910919189453, 40.43625946044922, 45.1573974609375, 52.02257232666015, 48.56901397705078, 48.05445556640625, 52.17318878173828, 55.466845703125, 55.739654541015625, 54.01840362548828, 54.051690673828126, 48.23794097900391, 41.82695617675781, 39.976698303222655, 38.78358154296875, 36.631352233886716, 32.10371704101563, 29.16675262451172, 27.327642822265624, 25.854829406738283, 26.493132019042967, 30.202236938476563, 31.807963562011718, 34.1703857421875, 33.280259704589845, 32.92369384765625, 36.733647155761716, 36.5574462890625, 40.62167510986328, 45.30859222412109, 44.16117553710937, 41.90992279052735, 43.72123718261719, 47.174137878417966, 44.556575012207034, 42.87532043457031, 44.29874114990234, 45.69954223632813, 41.068791198730466, 38.023095703125, 40.871473693847655, 40.962510681152345, 34.4193115234375, 30.350871276855468, 28.587992858886718, 28.949136352539064, 34.29034576416016, 35.244712829589844, 32.48330535888672, 35.492636108398436, 38.915185546875, 31.491596984863282, 31.710682678222657, 33.706322479248044, 37.92001190185547, 41.377970123291014, 38.551904296875, 36.301979064941406, 35.198622131347655, 33.89222183227539, 30.950508880615235, 28.624395751953124, 28.092375183105467, 28.319123840332033, 29.985074615478517, 28.703287506103514, 29.460755157470704, 27.660344696044923, 26.011257934570313, 23.915016174316406, 24.5432861328125, 25.5913444519043, 26.988822174072265, 24.569823455810546, 25.98686752319336, 24.42647933959961, 19.939124298095702, 17.767887115478516, 17.874130249023438, 15.76476593017578, 16.114447021484374, 16.529776763916015, 16.479144287109374, 16.948919677734374, 15.333244323730469, 13.940868377685547, 13.623796081542968, 15.400931549072265, 17.845833587646485, 19.182776641845702, 18.436087799072265, 17.064998626708984, 17.26526794433594, 19.717427062988282, 21.24462432861328, 22.28343276977539, 22.651512908935548, 21.249842834472656, 18.98738784790039, 21.115738677978516, 19.83998794555664, 20.588232421875, 20.658695220947266, 22.07738494873047, 20.25640106201172, 19.66504821777344, 20.30720672607422, 21.67621765136719, 20.724027252197267, 18.372946166992186, 17.78198699951172, 19.340448760986327, 20.073881530761717, 20.24507369995117, 19.188165283203126, 19.993731689453124, 18.949485778808594, 17.413033294677735, 14.311641693115234, 13.426365661621094, 16.404698181152344, 17.533022308349608, 16.289517211914063, 16.230094146728515, 15.966808319091797, 16.082582092285158, 13.866648864746093, 12.27248764038086, 12.003680419921874, 13.715357208251953, 13.196182250976562, 11.97830810546875, 12.697190856933593, 14.522168731689453, 15.576066589355468, 15.711257934570312, 15.452623748779297, 12.863646697998046, 12.036328125, 12.553289794921875, 13.430391693115235, 15.031000900268555, 14.38227424621582, 14.745211410522462, 14.62278938293457, 15.559734725952149, 15.446501922607421, 15.371404647827148, 16.57732391357422, 17.396385955810548, 17.248658752441408, 17.507235717773437, 17.300888061523438, 16.413942718505858, 14.680451202392579, 13.553557586669921, 14.59645881652832, 16.375525283813477, 16.628854751586914, 16.157353591918945, 14.618912506103516, 12.806095123291016, 13.34145736694336, 12.702802276611328, 12.91172981262207, 15.199021530151366, 17.664461517333983, 18.75383529663086, 19.56844291687012, 17.617464065551758, 18.16679801940918, 17.549903869628906, 18.36036605834961, 20.252636337280272, 23.172793579101562, 25.545364379882812, 27.5463436126709, 28.944729614257813, 28.84058532714844, 28.426579666137695, 30.349101257324218, 32.23348808288574, 33.89633636474609, 36.13203010559082, 37.789146423339844, 38.4650016784668, 38.83580894470215, 40.09836616516113, 39.23013458251953, 38.11909370422363, 41.35390853881836, 43.108053588867186, 45.14053115844727, 44.72906761169433, 42.80300025939941, 43.80832977294922, 43.25221633911133, 42.950191497802734, 43.440609741210935, 46.98283348083496, 50.66671600341797, 53.45667915344238, 51.26027565002441, 49.67367324829102, 49.284981918334964, 48.34595794677735, 48.44149742126465, 49.59604263305664, 53.24061279296875, 55.528814697265624, 56.34794807434082, 52.34915771484375, 48.83895835876465, 47.47611427307129, 50.63696479797363, 51.775851821899415, 49.01346702575684, 46.732459449768065, 47.35771083831787, 44.997528076171875, 45.98022804260254, 40.463508224487306, 35.58413314819336, 35.09208116531372, 35.34773006439209, 37.767073440551755]




for FD in [1]: ######['1','2','3','4']
    # if max_life==110 and FD=='1':
    #     continue
    # if max_life==110 and FD=='2':
        # continue
    
    FD_feature_columns=[]
 











    method_name='grid_FD{}_TaFCN_npseed{}_segment_{}'.format(FD,seed,segment)
    # method_name='FCN_RUL_1out_train_split_test'
    dataset='cmapssd'
    
    
    def unbalanced_penalty_score_1out(Y_test,Y_pred) :
          
        s=0    
        for i in range(len(Y_pred)):
            if Y_pred[i]>Y_test[i]:
                s=s+math.exp((Y_pred[i]-Y_test[i])/10)-1
            else:
                s=s+math.exp((Y_test[i]-Y_pred[i])/13)-1    
        print('unbalanced_penalty_score{}'.format(s))
        return s  
      
    def error_range_1out(Y_test,Y_pred) :           
        error_range=(Y_test-Y_pred).min(),(Y_test-Y_pred).max()
        print('error range{}'.format(error_range))
        return error_range
    
 
    print(X_train.shape)
    X_train=X_train.reshape(X_train.shape[0],X_train.shape[1],1,1)
    
    X_test=X_test.reshape(X_test.shape[0],X_train.shape[1],1,1)
    
    # x_train_array , y_train_array , x_test_array ,  y_test_array=get_input_out_2(CS2_36,CS2_37,20)   

    
    
    import six
    
    import keras.backend as K
    from keras.utils.generic_utils import deserialize_keras_object
    from keras.utils.generic_utils import serialize_keras_object
    from tensorflow.python.ops import math_ops
    from tensorflow.python.util.tf_export import tf_export
    
    
    
    
    
    from tensorflow.python.ops import math_ops
    

    

    
    
    #########np.greater_equal([4, 2, 1], [2, 2, 2])array([ True, True, False])
    #############tf.cast( ) 或者K.cast( ) 是执行 tensorflow 中的张量数据类型转换，比如读入的图片是int8类型的，一定要在训练的时候把图片的数据格式转换为float32.
    
    ################reduce_sum reduce dimensinality and get sum


    

            #return inputs*x   
    

    
    


    # reshape_size=len(FD_feature_columns)*int((sequence_length/3))
    def FCN_model():
    #    in0 = keras.Input(shape=(sequence_length,train_feature_slice.shape[1]))  # shape: (batch_size, 3, 2048)
    #    in0_shaped= keras.layers.Reshape((train_feature_slice.shape[1],sequence_length,1))(in0)   
    
        in0 = keras.Input(shape=(X_train.shape[1],X_train.shape[2],X_train.shape[3]),name='layer_13')  # shape: (batch_size, 3, 2048)
    #    begin_senet=SeBlock()(in0)
        x = keras.layers.AveragePooling2D(pool_size=(int(sequence_length/segment), 1), strides=int(sequence_length/segment),name='layer_12')(in0)
        # x = keras.layers.Reshape((-1,1))(x) 
        
        # x = keras.layers.Reshape((len(FD_feature_columns)*int((sequence_length/3)),))(x)             
        x = keras.layers.Reshape((-1,))(x)               
        # x = keras.layers.GlobalAveragePooling2D()(in0)
        x = keras.layers.Dense(1, use_bias=False,activation=keras.activations.relu)(x)
        kernel = keras.layers.Dense(1, use_bias=False,activation=keras.activations.hard_sigmoid,name='layer_11')(x)
        begin_senet= keras.layers.Multiply(name='layer_10')([in0,kernel])    #给通道加权重
     
    
       
    
    #     conv0 = keras.layers.
        
        
        conv0 = keras.layers.Conv2D(num_filter1, kernel1_size, strides=1, padding='same',name='layer_9')(begin_senet)
        conv0 = keras.layers.BatchNormalization()(conv0)
        conv0 = keras.layers.Activation('relu',name='layer_8')(conv0)
        
    #    conv0 = keras.layers.Dropout(dropout)(conv0)
        conv0 = keras.layers.Conv2D(num_filter2, kernel2_size, strides=1, padding='same',name='layer_7')(conv0)
        conv0 = keras.layers.BatchNormalization()(conv0)
        conv0 = keras.layers.Activation('relu',name='layer_6')(conv0)
        
    #    conv0 = keras.layers.Dropout(dropout)(conv0)
        conv0 = keras.layers.Conv2D(num_filter3, kernel3_size, strides=1, padding='same',name='layer_5')(conv0)
        conv0 = keras.layers.BatchNormalization()(conv0)
        conv0 = keras.layers.Activation('relu',name='layer_4')(conv0)
        conv0 = keras.layers.GlobalAveragePooling2D(name='layer_3')(conv0)
        conv0 = keras.layers.Dense(64, activation='relu',name='layer_2')(conv0)
        out = keras.layers.Dense(1, activation='relu',name='layer_1')(conv0)
    
        
        
    
    
    
        model = keras.models.Model(inputs=in0, outputs=[out])    
    
        return model
    
    
    # ##############shuaffle the data
    np.random.seed(seed)
    index=np.arange(X_train.shape[0])
    np.random.shuffle(index,)
    
     
    X_train=X_train[index]#X_train是训练集，y_train是训练标签
    Y_train=Y_train[index]
    
    #X_train, Xtest, Y_train, ytest = train_test_split(X_train, Y_train, test_size=0.7, random_state=0)
    
    
    if __name__ == '__main__':
    
        error_record=[]
        index_record=[]
        unbalanced_penalty_score_record=[]
        error_range_left_record=[]
        error_range_right_record=[]
        index_min_val_loss_record,min_val_loss_record=[],[]
        
        if os.path.exists(r"F:\桌面11.17\project\RUL\experiments_result\method_error_txt\{}.txt".format(method_name)):os.remove(r"F:\桌面11.17\project\RUL\experiments_result\method_error_txt\{}.txt".format(method_name))
    
     
    

    
        rul_pred_array_list=[]
        true_out_array_list=[]          
        error_pred_array_list=[]
                    
    #######             single  output                
    
        for i in range(run_times):
            print('xxx')
 
            model=FCN_model()
            plot_model(model, to_file=r"F:\桌面11.17\project\RUL\Flatten.png", show_shapes=True)#########to_file='Flatten.png',r"F:\桌面11.17\project\RUL\model\FCN_RUL_1out_train_valid_test\{}.h5
            
            optimizer = keras.optimizers.Adam()
            model.compile(loss='mse',#loss=root_mean_squared_error,
                          optimizer=optimizer,
                          metrics=[root_mean_squared_error])
             
            reduce_lr = keras.callbacks.ReduceLROnPlateau(monitor = 'loss', factor=0.5,
                              patience=patience_reduce_lr, min_lr=0.0001) 
            

    #                  verbose=1, validation_split=VALIDATION_SPLIT, callbacks = [reduce_lr])   
            model_name='{}_dataset_{}_log{}_time{}'.format(method_name,dataset,i,datetime.datetime.now().strftime('%Y%m%d%H%M%S'))
            earlystopping=keras.callbacks.EarlyStopping(monitor='loss',patience=patience,verbose=1)
            modelcheckpoint=keras.callbacks.ModelCheckpoint(monitor='loss',filepath=r"F:\桌面11.17\project\RUL\model\FCN_RUL_1out_train_valid_test\{}.h5".format(model_name),save_best_only=True,verbose=1)
            hist = model.fit(X_train, Y_train, batch_size=batch_size, epochs=nb_epochs,
                      verbose=1, validation_data=(X_test, Y_test), callbacks = [reduce_lr,earlystopping,modelcheckpoint])   
    #        hist = model.fit(X_train, Y_train, batch_size=batch_size, epochs=nb_epochs,
    #                  verbose=1, validation_data=(X_test, Y_test), callbacks = [reduce_lr,earlystopping,modelcheckpoint])   
            log = pd.DataFrame(hist.history)
            log.to_excel(r"F:\桌面11.17\project\RUL\experiments_result\log\{}_dataset_{}_log{}_time{}.xlsx".format(method_name,dataset,i,datetime.datetime.now().strftime('%Y%m%d%H%M%S')))
            
            print(hist.history.keys())
            epochs=range(len(hist.history['loss']))
            plt.figure()
            plt.plot(epochs,hist.history['loss'],'b',label='Training loss')
            plt.plot(epochs,hist.history['val_loss'],'r',label='Validation val_loss')
            plt.title('Traing and Validation loss')
            plt.legend()
            plt.show()

    
            
    #        model=keras.models.load_model(r"F:\桌面11.17\project\RUL\model\FCN_RUL_1out_train_valid_test\{}.h5".format(model_name),custom_objects={'root_mean_squared_error': root_mean_squared_error,'Smooth':Smooth,'SeBlock':SeBlock})
            model=keras.models.load_model(r"F:\桌面11.17\project\RUL\model\FCN_RUL_1out_train_valid_test\{}.h5".format(model_name),custom_objects={'root_mean_squared_error': root_mean_squared_error})
            for layer in model.layers:
                layer.trainable=False        
    #        score = model.evaluate(X_test, Y_test)  ############forbid evaluate!!!!!!!!!!!!!!!!!!
    #        print('score[1]:{}'.format(score[1]))    ############forbid evaluate!!!!!!!!!!!!!!!!!!    
            
            Y_pred=model.predict(X_test)
    #        rmse=root_mean_squared_error(Y_test,Y_pred)
    #        with tf.Session() as sess:
    #            print(rmse.eval())
            rmse_value=rmse(Y_test,Y_pred)
            # print('rmse:{}'.format(rmse_value))
            

            rul_pred_array=np.array(Y_pred)
            rul_pred_array=rul_pred_array.reshape(rul_pred_array.shape[0])
            
            # print(rul_pred_array.shape)
            
            true_out_array=np.array(Y_test)
            
            error_pred_array=rul_pred_array-true_out_array
            
            error_pred_array=np.maximum(error_pred_array, -error_pred_array)
                # print(sol.x)
                
            # print(error_pred_array.sum())
            # print("xxxxx")
            # print(error_pred_array)
                
                
            fig, ax = plt.subplots()
            # 在生成的坐标系下画折线图
            ax.plot(error_pred_array, linewidth=1)
            
            
            
            # 显示图形
            plt.show()   
             
            
            # print(i)
            # print("rul_pred_array") 
            # print(list(rul_pred_array))
            # print("true_out_array") 
            # print(list(true_out_array))
            # print("error_pred_array") 
            # print(list(error_pred_array))  
            
            rul_pred_array_list.append(rul_pred_array)
            true_out_array_list.append(true_out_array)            
            error_pred_array_list.append(error_pred_array)
        rul_pred_array=np.mean(rul_pred_array_list,axis=0)
        true_out_array=np.mean(true_out_array_list,axis=0)
        error_pred_array=np.mean(error_pred_array_list,axis=0)


        print(i)
        print("rul_pred_array") 
        print(list(rul_pred_array))
        print("true_out_array") 
        print(list(true_out_array))
        print("error_pred_array") 
        print(list(error_pred_array))  



