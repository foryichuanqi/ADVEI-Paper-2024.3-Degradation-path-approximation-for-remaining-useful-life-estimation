# -*- coding: utf-8 -*-
"""
Created on Sun Mar 26 22:25:42 2023

@author: Administrator
"""


import xlrd

import matplotlib.pyplot as plt

import numpy as np

from scipy.optimize import minimize, rosen, rosen_der

from scipy.stats import linregress




import numpy as np
import pandas as pd
import os
import pickle
import scipy as sp
import datetime


import numpy as np

import scipy as sp

import math

from numpy import matmul as mm
from math import sqrt,pi,log, exp

import xlrd

import matplotlib.pyplot as plt

import numpy as np

from scipy.optimize import minimize, rosen, rosen_der

from scipy.stats import linregress

from scipy.stats import norm


import scipy.io as scio


print(os.path.abspath(os.path.join(os.getcwd(), "../..")))
last_last_path=os.path.abspath(os.path.join(os.getcwd(), "../.."))

print(os.path.abspath(os.path.join(os.getcwd(), "..")))
last_path=os.path.abspath(os.path.join(os.getcwd(), ".."))

print(os.path.abspath(os.path.join(os.getcwd(), "../../..")))
last_last_last_path=os.path.abspath(os.path.join(os.getcwd(), "../../.."))


print(os.path.abspath(os.path.join(os.getcwd(), "../../../..")))
last_last_last_last_path=os.path.abspath(os.path.join(os.getcwd(), "../../../.."))


Si=[355, 340, 326, 311, 307, 304, 301, 297, 293, 289, 285, 281, 279, 277, 275, 273, 272, 270, 268, 266, 265, 264, 262, 261, 260, 259, 257, 256, 255, 254, 252, 251, 250, 249, 248, 247, 245, 244, 243, 242, 241, 240, 238, 237, 236, 235, 234, 233, 231, 230, 229, 228, 226, 225, 224, 223, 222, 220, 219, 218, 217, 216, 214, 213, 212, 211, 210, 209, 208, 207, 206, 205, 205, 204, 203, 202, 201, 200, 199, 198, 197, 197, 196, 195, 194, 193, 193, 192, 191, 190, 190, 189, 188, 188, 187, 186, 186, 185, 185, 184, 184, 183, 183, 183, 182, 182, 181, 181, 180, 180, 179, 179, 178, 178, 178, 177, 177, 176, 176, 175, 175, 174, 174, 174, 173, 173, 172, 172, 171, 171, 171, 170, 170, 170, 169, 169, 169, 168, 168, 167, 167, 167, 166, 166, 166, 165, 165, 165, 164, 164, 163, 163, 163, 162, 162, 162, 161, 161, 161, 160, 160, 159, 159, 158, 158, 158, 157, 157, 156, 156, 155, 155, 154, 153, 153, 152, 151, 150, 150, 149, 148, 148, 147, 146, 146, 145, 144, 143, 143, 142, 141, 140, 139, 138, 137, 135, 134, 133, 132, 131, 129, 128, 127, 126, 124, 123, 122, 121, 120, 118, 117, 116, 115, 114, 112, 111, 110, 109, 108, 107, 106, 104, 103, 102, 101, 99, 97, 96, 94, 92, 91, 89, 87, 86, 84, 83, 81, 79, 78, 76, 75, 73, 72, 70, 68, 67, 65, 64, 62, 61, 59, 58, 56, 54, 53, 51, 50, 49, 48, 47, 45, 44, 43, 42, 41, 39, 38, 37, 36, 34, 33, 32, 31, 29, 28, 27, 25, 24, 22, 21, 20, 18, 17, 15, 14, 12, 11, 9, 8, 7, 6, 4, 3, 2, 0]
     
Zhang=[158, 159, 308, 224, 162, 156, 151, 146, 142, 136, 130, 125, 120, 120, 119, 119, 119, 118, 118, 118, 117, 118, 119, 119, 120, 120, 121, 121, 122, 122, 122, 123, 123, 123, 124, 124, 125, 125, 125, 126, 126, 126, 126, 126, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 126, 126, 126, 126, 126, 126, 126, 125, 126, 126, 126, 126, 126, 126, 126, 126, 126, 127, 127, 127, 127, 127, 127, 127, 128, 128, 128, 128, 128, 129, 129, 129, 129, 130, 130, 130, 131, 131, 131, 131, 132, 133, 133, 134, 134, 135, 135, 136, 137, 137, 138, 138, 139, 140, 140, 141, 141, 142, 142, 143, 143, 144, 145, 145, 146, 146, 147, 147, 148, 148, 149, 149, 150, 150, 151, 152, 152, 153, 153, 154, 154, 155, 156, 156, 157, 157, 158, 159, 159, 160, 160, 161, 161, 162, 162, 163, 163, 164, 164, 165, 166, 166, 167, 167, 167, 168, 168, 168, 169, 169, 169, 169, 170, 170, 170, 170, 169, 169, 169, 169, 168, 168, 168, 167, 167, 166, 166, 166, 165, 165, 164, 164, 163, 163, 162, 162, 160, 159, 157, 155, 154, 152, 151, 149, 147, 146, 144, 143, 141, 140, 138, 137, 135, 134, 132, 131, 129, 128, 127, 125, 124, 123, 121, 120, 119, 117, 116, 115, 113, 110, 108, 106, 104, 102, 100, 98, 96, 93, 91, 90, 88, 86, 84, 82, 80, 78, 76, 74, 72, 71, 69, 67, 65, 63, 62, 60, 58, 56, 55, 53, 52, 50, 49, 48, 47, 45, 44, 43, 42, 40, 39, 38, 36, 35, 34, 32, 31, 30, 28, 27, 25, 24, 22, 21, 19, 18, 16, 15, 13, 12, 10, 9, 7, 6, 5, 3, 2, 1]

Hu=[316, 221, 188, 0, 183, 183, 181, 180, 187, 187, 185, 183, 185, 193, 194, 196, 198, 198, 200, 200, 200, 205, 207, 208, 208, 206, 211, 210, 212, 212, 214, 214, 215, 215, 214, 216, 217, 217, 216, 216, 218, 218, 218, 217, 218, 217, 218, 217, 218, 237, 232, 228, 225, 222, 219, 217, 215, 213, 211, 209, 208, 206, 205, 204, 203, 203, 202, 201, 201, 200, 199, 198, 198, 197, 196, 195, 195, 194, 193, 193, 192, 191, 191, 190, 189, 189, 188, 188, 187, 186, 186, 185, 184, 184, 183, 183, 183, 182, 182, 181, 181, 181, 180, 180, 179, 179, 179, 178, 178, 177, 177, 176, 176, 175, 174, 174, 173, 173, 172, 171, 171, 170, 169, 169, 168, 167, 167, 166, 165, 165, 164, 164, 163, 162, 162, 161, 160, 160, 159, 158, 158, 157, 156, 155, 155, 154, 153, 152, 152, 151, 150, 149, 149, 148, 147, 146, 146, 145, 144, 143, 142, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 125, 124, 123, 122, 121, 120, 119, 117, 116, 115,119,120,121,122,122, 124, 123, 124, 125, 124, 124, 123, 122, 120, 118, 117, 115, 114, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 97, 94, 92, 89, 87, 85, 82, 80, 78, 76, 74, 73, 71, 69, 67, 66, 64, 63, 61, 60, 58, 57, 55, 54, 53, 51, 50, 49, 47, 46, 45, 43, 42, 41, 40, 39, 38, 37, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 28, 27, 26, 25, 24, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 11, 10, 9, 7 ,6 ,5, 4, 3, 2, 1, 0]        
DCNN=[293.71826, 282.54242, 279.9193, 279.42642, 281.7723, 282.49982, 280.8286, 278.4371, 275.55255, 272.5454, 270.04382, 267.67554, 265.7529, 264.26883, 263.75766, 264.6298, 266.00943, 265.91074, 262.8673, 258.97083, 255.78398, 253.37302, 251.05667, 248.84615, 246.51001, 243.96347, 241.32593, 238.49959, 235.61723, 232.73686, 229.81897, 226.75534, 223.66226, 220.6268, 217.51285, 214.72266, 212.21048, 209.76314, 207.32886, 204.91028, 202.5071, 200.10727, 197.71072, 195.29793, 192.85397, 190.41064, 188.001, 185.67691, 183.41365, 181.14655, 178.8627, 176.56201, 174.2572, 171.94705, 169.62402, 167.28758, 164.93806, 162.58493, 160.21855, 157.83241, 155.43945, 153.04044, 150.65906, 148.2537, 145.85309, 143.48569, 141.13405, 138.80827, 136.52158, 134.27548, 132.04646, 129.84085, 127.65794, 125.51308, 123.419655, 121.35057, 119.29183, 117.26587, 115.305336, 113.46, 111.69757, 109.97882, 108.31112, 106.69755, 105.136375, 103.62703, 102.16173, 100.73247, 99.34051, 97.98482, 96.67435, 95.39641, 94.162094, 92.97775, 91.848114, 90.752396, 89.708015, 88.719124, 87.76563, 86.86572, 86.0307, 85.237625, 84.48041, 83.75493, 83.06505, 82.40947, 81.79132, 81.201355, 80.63197, 80.08755, 79.56968, 79.090195, 78.64073, 78.20221, 77.77282, 77.35111, 76.93582, 76.52748, 76.1237, 75.72313, 75.32444, 74.927795, 74.53616, 74.1491, 73.764114, 73.38293, 73.0135, 72.64239, 72.27529, 71.92018, 71.56847, 71.22337, 70.88965, 70.565475, 70.24925, 69.93886, 69.63402, 69.33477, 69.04368, 68.75808, 68.47375, 68.19264, 67.91753, 67.657936, 67.40932, 67.16538, 66.9235, 66.6836, 66.44458, 66.20731, 65.972275, 65.73852, 65.50614, 65.27462, 65.04403, 64.81419, 64.58451, 64.35496, 64.11837, 63.88611, 63.65055, 63.404297, 63.16114, 62.916004, 62.662636, 62.400185, 62.128277, 61.84784, 61.55303, 61.247032, 60.930187, 60.59635, 60.2578, 59.922108, 59.56124, 59.159393, 58.71778, 58.259235, 57.79026, 57.30367, 56.79196, 56.263527, 55.73451, 55.205524, 54.66266, 54.08277, 53.463306, 52.818462, 52.164207, 51.50429, 50.808178, 50.132328, 49.449036, 48.733692, 48.074234, 47.430973, 46.753647, 46.039967, 45.298492, 44.525066, 43.71769, 42.874043, 41.97477, 41.08634, 40.232136, 39.384865, 38.51236, 37.53138, 36.443245, 35.36508, 34.315514, 33.291683, 32.31306, 31.396597, 30.516644, 29.685324, 28.884039, 28.117405, 27.3988, 26.721777, 26.09158, 25.505644, 24.938002, 24.410057, 23.923883, 23.452187, 23.018642, 22.598112, 22.191236, 21.79636, 21.401001, 21.01373, 20.643208, 20.288727, 19.950794, 19.631191, 19.358683, 19.136791, 18.926184, 18.646757, 18.290215, 17.916155, 17.553234, 17.201807, 16.861252, 16.530056, 16.20242, 15.878375, 15.564667, 15.2593975, 14.955856, 14.6604185, 14.369702, 14.086255, 13.816765, 13.554998, 13.295621, 13.047714, 12.797143, 12.550102, 12.306377, 12.070278, 11.843157, 11.627325, 11.422579, 11.231264, 11.050455, 10.880195, 10.708807, 10.543206, 10.381536, 10.242185, 10.118925, 9.999968, 9.884528, 9.769572, 9.656583, 9.543007, 9.429403, 9.316863, 9.2063675, 9.0976715, 8.992862, 8.891032, 8.794586, 8.700773, 8.6111, 8.523294, 8.4372835, 8.352652, 8.267385, 8.184611, 8.104288]

TaFCN=[271.70255, 278.1811, 279.59442, 275.33707, 267.25534, 261.51987, 260.51773, 238.3278, 237.01205, 234.81128, 232.41821, 229.69409, 237.60434, 246.31145, 245.9124, 242.31522, 238.98984, 239.53242, 238.17119, 234.6303, 231.75859, 230.65923, 229.42007, 227.88896, 225.91232, 223.30527, 220.18137, 216.91129, 213.83635, 211.04514, 208.11935, 205.14246, 202.21788, 199.30307, 196.46918, 193.85356, 191.47385, 189.29922, 187.06943, 184.82101, 182.58586, 180.38762, 178.2265, 176.09373, 173.98222, 171.87532, 169.83109, 167.8489, 165.90646, 164.00354, 162.06941, 160.08308, 158.06302, 155.97736, 153.83836, 151.64383, 149.4, 147.09041, 144.70346, 142.23907, 139.76718, 137.32303, 134.88516, 132.30402, 129.47746, 126.41914, 123.15102, 119.79266, 116.47392, 113.26123, 110.1855, 107.295166, 104.67407, 102.346146, 100.26659, 98.400764, 96.679276, 95.06999, 93.610306, 92.29664, 91.12023, 90.0634, 89.060646, 88.09447, 87.15912, 86.26463, 85.40833, 84.58616, 83.79849, 83.037704, 82.30241, 81.58846, 80.8876, 80.20327, 79.54628, 78.92237, 78.35119, 77.8232, 77.326294, 76.86369, 76.43638, 76.041245, 75.668625, 75.312355, 74.943954, 74.55795, 74.14744, 73.7102, 73.24769, 72.76615, 72.28685, 71.83478, 71.42007, 71.03729, 70.658226, 70.287575, 69.93013, 69.59055, 69.26376, 68.94182, 68.61912, 68.29785, 67.979996, 67.670845, 67.367905, 67.07418, 66.79194, 66.520874, 66.26416, 66.016014, 65.77409, 65.54114, 65.31154, 65.08749, 64.863, 64.63673, 64.405075, 64.16662, 63.91802, 63.65744, 63.38681, 63.109577, 62.83499, 62.579243, 62.34947, 62.139534, 61.92353, 61.703693, 61.4919, 61.2826, 61.072685, 60.863045, 60.655426, 60.448875, 60.243813, 60.037895, 59.831825, 59.628296, 59.41889, 59.199974, 58.970276, 58.730965, 58.484978, 58.251503, 58.02663, 57.797356, 57.533226, 57.259857, 56.995583, 56.75218, 56.511005, 56.280952, 56.02528, 55.727135, 55.328846, 54.80796, 54.025734, 52.947945, 51.7165, 50.447968, 49.398903, 48.74472, 48.401524, 48.10969, 47.855225, 47.561546, 47.189754, 46.73313, 46.239426, 45.740154, 45.21382, 44.649128, 44.050213, 43.42681, 42.797615, 42.15772, 41.50396, 40.84182, 40.175087, 39.50308, 38.83703, 38.194683, 37.601017, 37.091846, 36.675438, 36.32338, 35.943676, 35.391064, 34.592407, 33.607433, 32.63714, 31.693567, 30.77666, 29.894413, 29.0312, 28.205399, 27.417526, 26.664394, 25.94607, 25.26581, 24.619286, 24.000116, 23.412292, 22.85373, 22.318396, 21.823658, 21.366789, 20.947159, 20.56236, 20.204248, 19.872768, 19.57027, 19.289059, 19.028408, 18.786219, 18.572918, 18.400135, 18.272484, 18.15736, 18.017448, 17.804714, 17.511547, 17.225128, 16.947369, 16.678188, 16.410032, 16.146355, 15.886775, 15.634738, 15.386587, 15.142054, 14.900332, 14.661756, 14.424039, 14.190425, 13.962222, 13.738963, 13.521327, 13.304758, 13.08531, 12.870285, 12.657373, 12.447558, 12.243441, 12.044533, 11.851888, 11.663368, 11.479512, 11.294484, 11.104896, 10.922815, 10.759542, 10.626402, 10.533262, 10.441904, 10.35272, 10.267083, 10.183947, 10.10316, 10.024042, 9.946326, 9.871294, 9.799982, 9.7310505, 9.6642, 9.599112, 9.539144, 9.482988, 9.429937, 9.38101, 9.3336115, 9.287108, 9.241938]

Our=[106, 12, 16, 306, 305, 304, 303, 302, 296, 288, 281, 277, 274, 271, 268, 266, 264, 263, 261, 259, 258, 257, 256, 255, 254, 253, 252, 251, 250, 250, 249, 248, 248, 247, 246, 246, 245, 245, 244, 244, 243, 243, 242, 242, 241, 241, 240, 239, 239, 238, 238, 237, 237, 236, 235, 235, 234, 233, 232, 231, 231, 230, 229, 228, 226, 225, 224, 223, 221, 220, 218, 216, 215, 213, 211, 209, 207, 205, 204, 202, 200, 199, 197, 195, 194, 193, 191, 190, 189, 188, 187, 186, 185, 184, 184, 183, 182, 181, 180, 180, 179, 178, 178, 177, 177, 176, 175, 175, 174, 174, 173, 172, 172, 171, 171, 170, 169, 169, 168, 167, 167, 166, 165, 164, 164, 163, 162, 161, 160, 160, 159, 158, 157, 156, 156, 155, 154, 153, 152, 151, 151, 150, 149, 148, 147, 146, 146, 145, 144, 143, 142, 141, 141, 140, 139, 138, 137, 136, 135, 135, 134, 133, 132, 131, 130, 129, 128, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 101, 100, 99, 98, 97, 96, 95, 93, 92, 91, 90, 89, 88, 87, 86, 84, 83, 82, 81, 80, 79, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 66, 65, 64, 63, 62, 61, 60, 59, 57, 56, 55, 54, 53, 51, 50, 49, 48, 46, 45, 44, 42, 41, 40, 38, 37, 36, 35, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 19, 18, 17, 16, 16, 15, 14, 14, 13, 12, 12, 11, 10, 10, 9, 8, 8, 7, 6, 6, 5, 4, 3, 3, 2, 1, 0, 0]

groud_truth=[822.0, 821.0, 820.0, 819.0, 818.0, 817.0, 816.0, 815.0, 814.0, 813.0, 812.0, 811.0, 810.0, 809.0, 808.0, 807.0, 806.0, 805.0, 804.0, 803.0, 802.0, 801.0, 800.0, 799.0, 798.0, 797.0, 796.0, 795.0, 794.0, 793.0, 792.0, 791.0, 790.0, 789.0, 788.0, 787.0, 786.0, 785.0, 784.0, 783.0, 782.0, 781.0, 780.0, 779.0, 778.0, 777.0, 776.0, 775.0, 774.0, 773.0, 772.0, 771.0, 770.0, 769.0, 768.0, 767.0, 766.0, 765.0, 764.0, 763.0, 762.0, 761.0, 760.0, 759.0, 758.0, 757.0, 756.0, 755.0, 754.0, 753.0, 752.0, 751.0, 750.0, 749.0, 748.0, 747.0, 746.0, 745.0, 744.0, 743.0, 742.0, 741.0, 740.0, 739.0, 738.0, 737.0, 736.0, 735.0, 734.0, 733.0, 732.0, 731.0, 730.0, 729.0, 728.0, 727.0, 726.0, 725.0, 724.0, 723.0, 722.0, 721.0, 720.0, 719.0, 718.0, 717.0, 716.0, 715.0, 714.0, 713.0, 712.0, 711.0, 710.0, 709.0, 708.0, 707.0, 706.0, 705.0, 704.0, 703.0, 702.0, 701.0, 700.0, 699.0, 698.0, 697.0, 696.0, 695.0, 694.0, 693.0, 692.0, 691.0, 690.0, 689.0, 688.0, 687.0, 686.0, 685.0, 684.0, 683.0, 682.0, 681.0, 680.0, 679.0, 678.0, 677.0, 676.0, 675.0, 674.0, 673.0, 672.0, 671.0, 670.0, 669.0, 668.0, 667.0, 666.0, 665.0, 664.0, 663.0, 662.0, 661.0, 660.0, 659.0, 658.0, 657.0, 656.0, 655.0, 654.0, 653.0, 652.0, 651.0, 650.0, 649.0, 648.0, 647.0, 646.0, 645.0, 644.0, 643.0, 642.0, 641.0, 640.0, 639.0, 638.0, 637.0, 636.0, 635.0, 634.0, 633.0, 632.0, 631.0, 630.0, 629.0, 628.0, 627.0, 626.0, 625.0, 624.0, 623.0, 622.0, 621.0, 620.0, 619.0, 618.0, 617.0, 616.0, 615.0, 614.0, 613.0, 612.0, 611.0, 610.0, 609.0, 608.0, 607.0, 606.0, 605.0, 604.0, 603.0, 602.0, 601.0, 600.0, 599.0, 598.0, 597.0, 596.0, 595.0, 594.0, 593.0, 592.0, 591.0, 590.0, 589.0, 588.0, 587.0, 586.0, 585.0, 584.0, 583.0, 582.0, 581.0, 580.0, 579.0, 578.0, 577.0, 576.0, 575.0, 574.0, 573.0, 572.0, 571.0, 570.0, 569.0, 568.0, 567.0, 566.0, 565.0, 564.0, 563.0, 562.0, 561.0, 560.0, 559.0, 558.0, 557.0, 556.0, 555.0, 554.0, 553.0, 552.0, 551.0, 550.0, 549.0, 548.0, 547.0, 546.0, 545.0, 544.0, 543.0, 542.0, 541.0, 540.0, 539.0, 538.0, 537.0, 536.0, 535.0, 534.0, 533.0, 532.0, 531.0, 530.0, 529.0, 528.0, 527.0, 526.0, 525.0, 524.0, 523.0, 522.0, 521.0, 520.0, 519.0, 518.0, 517.0, 516.0, 515.0, 514.0, 513.0, 512.0, 511.0, 510.0, 509.0, 508.0, 507.0, 506.0, 505.0, 504.0, 503.0, 502.0, 501.0, 500.0, 499.0, 498.0, 497.0, 496.0, 495.0, 494.0, 493.0, 492.0, 491.0, 490.0, 489.0, 488.0, 487.0, 486.0, 485.0, 484.0, 483.0, 482.0, 481.0, 480.0, 479.0, 478.0, 477.0, 476.0, 475.0, 474.0, 473.0, 472.0, 471.0, 470.0, 469.0, 468.0, 467.0, 466.0, 465.0, 464.0, 463.0, 462.0, 461.0, 460.0, 459.0, 458.0, 457.0, 456.0, 455.0, 454.0, 453.0, 452.0, 451.0, 450.0, 449.0, 448.0, 447.0, 446.0, 445.0, 444.0, 443.0, 442.0, 441.0, 440.0, 439.0, 438.0, 437.0, 436.0, 435.0, 434.0, 433.0, 432.0, 431.0, 430.0, 429.0, 428.0, 427.0, 426.0, 425.0, 424.0, 423.0, 422.0, 421.0, 420.0, 419.0, 418.0, 417.0, 416.0, 415.0, 414.0, 413.0, 412.0, 411.0, 410.0, 409.0, 408.0, 407.0, 406.0, 405.0, 404.0, 403.0, 402.0, 401.0, 400.0, 399.0, 398.0, 397.0, 396.0, 395.0, 394.0, 393.0, 392.0, 391.0, 390.0, 389.0, 388.0, 387.0, 386.0, 385.0, 384.0, 383.0, 382.0, 381.0, 380.0, 379.0, 378.0, 377.0, 376.0, 375.0, 374.0, 373.0, 372.0, 371.0, 370.0, 369.0, 368.0, 367.0, 366.0, 365.0, 364.0, 363.0, 362.0, 361.0, 360.0, 359.0, 358.0, 357.0, 356.0, 355.0, 354.0, 353.0, 352.0, 351.0, 350.0, 349.0, 348.0, 347.0, 346.0, 345.0, 344.0, 343.0, 342.0, 341.0, 340.0, 339.0, 338.0, 337.0, 336.0, 335.0, 334.0, 333.0, 332.0, 331.0, 330.0, 329.0, 328.0, 327.0, 326.0, 325.0, 324.0, 323.0, 322.0, 321.0, 320.0, 319.0, 318.0, 317.0, 316.0, 315.0, 314.0, 313.0, 312.0, 311.0, 310.0, 309.0, 308.0, 307.0, 306.0, 305.0, 304.0, 303.0, 302.0, 301.0, 300.0, 299.0, 298.0, 297.0, 296.0, 295.0, 294.0, 293.0, 292.0, 291.0, 290.0, 289.0, 288.0, 287.0, 286.0, 285.0, 284.0, 283.0, 282.0, 281.0, 280.0, 279.0, 278.0, 277.0, 276.0, 275.0, 274.0, 273.0, 272.0, 271.0, 270.0, 269.0, 268.0, 267.0, 266.0, 265.0, 264.0, 263.0, 262.0, 261.0, 260.0, 259.0, 258.0, 257.0, 256.0, 255.0, 254.0, 253.0, 252.0, 251.0, 250.0, 249.0, 248.0, 247.0, 246.0, 245.0, 244.0, 243.0, 242.0, 241.0, 240.0, 239.0, 238.0, 237.0, 236.0, 235.0, 234.0, 233.0, 232.0, 231.0, 230.0, 229.0, 228.0, 227.0, 226.0, 225.0, 224.0, 223.0, 222.0, 221.0, 220.0, 219.0, 218.0, 217.0, 216.0, 215.0, 214.0, 213.0, 212.0, 211.0, 210.0, 209.0, 208.0, 207.0, 206.0, 205.0, 204.0, 203.0, 202.0, 201.0, 200.0, 199.0, 198.0, 197.0, 196.0, 195.0, 194.0, 193.0, 192.0, 191.0, 190.0, 189.0, 188.0, 187.0, 186.0, 185.0, 184.0, 183.0, 182.0, 181.0, 180.0, 179.0, 178.0, 177.0, 176.0, 175.0, 174.0, 173.0, 172.0, 171.0, 170.0, 169.0, 168.0, 167.0, 166.0, 165.0, 164.0, 163.0, 162.0, 161.0, 160.0, 159.0, 158.0, 157.0, 156.0, 155.0, 154.0, 153.0, 152.0, 151.0, 150.0, 149.0, 148.0, 147.0, 146.0, 145.0, 144.0, 143.0, 142.0, 141.0, 140.0, 139.0, 138.0, 137.0, 136.0, 135.0, 134.0, 133.0, 132.0, 131.0, 130.0, 129.0, 128.0, 127.0, 126.0, 125.0, 124.0, 123.0, 122.0, 121.0, 120.0, 119.0, 118.0, 117.0, 116.0, 115.0, 114.0, 113.0, 112.0, 111.0, 110.0, 109.0, 108.0, 107.0, 106.0, 105.0, 104.0, 103.0, 102.0, 101.0, 100.0, 99.0, 98.0, 97.0, 96.0, 95.0, 94.0, 93.0, 92.0, 91.0, 90.0, 89.0, 88.0, 87.0, 86.0, 85.0, 84.0, 83.0, 82.0, 81.0, 80.0, 79.0, 78.0, 77.0, 76.0, 75.0, 74.0, 73.0, 72.0, 71.0, 70.0, 69.0, 68.0, 67.0, 66.0, 65.0, 64.0, 63.0, 62.0, 61.0, 60.0, 59.0, 58.0, 57.0, 56.0, 55.0, 54.0, 53.0, 52.0, 51.0, 50.0, 49.0, 48.0, 47.0, 46.0, 45.0, 44.0, 43.0, 42.0, 41.0, 40.0, 39.0, 38.0, 37.0, 36.0, 35.0, 34.0, 33.0, 32.0, 31.0, 30.0, 29.0, 28.0, 27.0, 26.0, 25.0, 24.0, 23.0, 22.0, 21.0, 20.0, 19.0, 18.0, 17.0, 16.0, 15.0, 14.0, 13.0, 12.0, 11.0, 10.0, 9.0, 8.0, 7.0, 6.0, 5.0, 4.0, 3.0, 2.0, 1.0, 0.0]


min_len=min(len(Si),len(Zhang),len(TaFCN),len(Our),len(Hu))-10

fig, ax = plt.subplots(figsize = (7, 4))
# 在生成的坐标系下画折线图
ax.plot(groud_truth[-min_len:], linewidth=1,c='black',label="Groud truth")
ax.plot(Si[-min_len:], linewidth=2,c='b',label="Si' model",linestyle='-.')
ax.plot(Zhang[-min_len:], linewidth=2,c='g',label="Zhang' model",linestyle='-.')
ax.plot(Hu[-min_len:], linewidth=2,c='#A67D3D',label="Hu' model",linestyle='-.')
ax.plot(DCNN[-min_len:], linewidth=2,c='#E47833',label="DCNN",linestyle='-.')
ax.plot(TaFCN[-min_len:], linewidth=2,c='y',label="TaFCN",linestyle='-.')


ax.plot(Our[-min_len:], linewidth=2,c='r',label="Our",linestyle='-.')
# 显示图形
font1 = { 
'weight' : 'normal',
'size' : 14,
}
    
      
    #设置横纵坐标的名称以及对应字体格式
font2 = {#'family' : 'Times New Roman',
'weight' : 'normal',
'size' : 30,
}
error_rate=0.1
error_rate_1=0.4
# plt.fill_between(range(min_len), np.array(groud_truth[-min_len:])*(1+error_rate), np.array(groud_truth[-min_len:])*(1-error_rate),color="#CCCCCC",label='Error band (±{:.0%})'.format(error_rate))# color="#CCEEFF")
# plt.fill_between(range(min_len), np.array(groud_truth[-min_len:])*(1+error_rate), np.array(groud_truth[-min_len:])*(1+error_rate_1),color="#E7E7E7",label='Error band (±{:.0%})'.format(error_rate_1))# color="#CCEEFF")
# plt.fill_between(range(min_len), np.array(groud_truth[-min_len:])*(1-error_rate), np.array(groud_truth[-min_len:])*(1-error_rate_1),color="#E7E7E7")# color="#CCEEFF")
       
plt.grid(alpha=0.5,linestyle='-.') #网格线，更好看   
plt.xlabel('Cutting times (pass)',font1) #X轴标签
plt.ylabel("Predicted RUL (Pass)",font1) #Y轴标签
plt.legend()
plt.savefig(last_last_last_path+r'\figure\by_code\prediction_rul_xiandao_c1_c4_to_c6.eps',dpi=800,format='eps',bbox_inches = 'tight')
plt.savefig(last_last_last_path+r'\figure\by_code\prediction_rul_xiandao_c1_c4_to_c6.png',dpi=800,format='png',bbox_inches = 'tight')
plt.show()


Si_error=[61.0, 47.0, 34.0, 20.0, 17.0, 15.0, 13.0, 10.0, 7.0, 4.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 6.0, 7.0, 8.0, 9.0, 9.0, 9.0, 10.0, 10.0, 10.0, 10.0, 11.0, 11.0, 11.0, 11.0, 12.0, 12.0, 12.0, 12.0, 12.0, 12.0, 13.0, 13.0, 13.0, 13.0, 13.0, 13.0, 14.0, 14.0, 14.0, 14.0, 14.0, 14.0, 15.0, 15.0, 15.0, 15.0, 16.0, 16.0, 16.0, 16.0, 16.0, 17.0, 17.0, 17.0, 17.0, 17.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 17.0, 17.0, 17.0, 17.0, 17.0, 17.0, 17.0, 17.0, 17.0, 16.0, 16.0, 16.0, 16.0, 16.0, 15.0, 15.0, 15.0, 15.0, 14.0, 14.0, 14.0, 13.0, 13.0, 13.0, 12.0, 12.0, 11.0, 11.0, 10.0, 10.0, 9.0, 8.0, 8.0, 7.0, 7.0, 6.0, 6.0, 5.0, 5.0, 4.0, 4.0, 3.0, 2.0, 2.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 2.0, 3.0, 3.0, 4.0, 4.0, 5.0, 5.0, 6.0, 7.0, 7.0, 8.0, 9.0, 9.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 14.0, 14.0, 15.0, 16.0, 16.0, 17.0, 18.0, 18.0, 19.0, 19.0, 20.0, 21.0, 21.0, 22.0, 23.0, 23.0, 24.0, 25.0, 25.0, 26.0, 26.0, 27.0, 27.0, 28.0, 29.0, 29.0, 30.0, 30.0, 31.0, 31.0, 32.0, 32.0, 32.0, 33.0, 33.0, 33.0, 33.0, 34.0, 34.0, 34.0, 35.0, 35.0, 35.0, 36.0, 36.0, 36.0, 36.0, 37.0, 37.0, 37.0, 37.0, 37.0, 37.0, 37.0, 36.0, 36.0, 36.0, 36.0, 36.0, 35.0, 35.0, 35.0, 35.0, 34.0, 34.0, 34.0, 34.0, 34.0, 33.0, 33.0, 33.0, 33.0, 33.0, 32.0, 32.0, 32.0, 32.0, 32.0, 32.0, 32.0, 31.0, 31.0, 31.0, 31.0, 30.0, 29.0, 29.0, 28.0, 27.0, 27.0, 26.0, 25.0, 25.0, 24.0, 24.0, 23.0, 22.0, 22.0, 21.0, 21.0, 20.0, 20.0, 19.0, 18.0, 18.0, 17.0, 17.0, 16.0, 16.0, 15.0, 15.0, 14.0, 13.0, 13.0, 12.0, 12.0, 12.0, 12.0, 12.0, 11.0, 11.0, 11.0, 11.0, 11.0, 10.0, 10.0, 10.0, 10.0, 9.0, 9.0, 9.0, 9.0, 8.0, 8.0, 8.0, 7.0, 7.0, 6.0, 6.0, 6.0, 5.0, 5.0, 4.0, 4.0, 3.0, 3.0, 2.0, 2.0, 2.0, 2.0, 1.0, 1.0, 1.0, 0.0]
     
Zhang_error=[136.0, 134.0, 16.0, 67.0, 128.0, 133.0, 137.0, 141.0, 144.0, 149.0, 154.0, 158.0, 162.0, 161.0, 161.0, 160.0, 159.0, 159.0, 158.0, 157.0, 157.0, 155.0, 153.0, 152.0, 150.0, 149.0, 147.0, 146.0, 144.0, 143.0, 142.0, 140.0, 139.0, 138.0, 136.0, 135.0, 133.0, 132.0, 131.0, 129.0, 128.0, 127.0, 126.0, 125.0, 123.0, 122.0, 121.0, 120.0, 119.0, 118.0, 117.0, 116.0, 115.0, 114.0, 113.0, 112.0, 111.0, 111.0, 110.0, 109.0, 108.0, 107.0, 106.0, 105.0, 105.0, 103.0, 102.0, 101.0, 100.0, 99.0, 98.0, 97.0, 96.0, 95.0, 93.0, 92.0, 91.0, 90.0, 89.0, 88.0, 87.0, 85.0, 84.0, 83.0, 82.0, 81.0, 79.0, 78.0, 77.0, 76.0, 74.0, 73.0, 72.0, 70.0, 69.0, 68.0, 67.0, 65.0, 63.0, 62.0, 60.0, 59.0, 57.0, 56.0, 54.0, 52.0, 51.0, 49.0, 48.0, 46.0, 44.0, 43.0, 41.0, 40.0, 38.0, 37.0, 35.0, 34.0, 32.0, 30.0, 29.0, 27.0, 26.0, 24.0, 23.0, 21.0, 20.0, 18.0, 17.0, 15.0, 14.0, 12.0, 10.0, 9.0, 7.0, 6.0, 4.0, 3.0, 1.0, 1.0, 2.0, 4.0, 5.0, 7.0, 9.0, 10.0, 12.0, 13.0, 15.0, 16.0, 18.0, 19.0, 21.0, 22.0, 24.0, 25.0, 27.0, 29.0, 30.0, 32.0, 33.0, 34.0, 36.0, 37.0, 38.0, 40.0, 41.0, 42.0, 43.0, 45.0, 46.0, 47.0, 48.0, 48.0, 49.0, 50.0, 51.0, 51.0, 52.0, 53.0, 53.0, 54.0, 54.0, 55.0, 56.0, 56.0, 57.0, 57.0, 58.0, 58.0, 59.0, 59.0, 60.0, 59.0, 59.0, 58.0, 57.0, 57.0, 56.0, 56.0, 55.0, 54.0, 54.0, 53.0, 53.0, 52.0, 52.0, 51.0, 51.0, 50.0, 50.0, 49.0, 49.0, 48.0, 48.0, 48.0, 47.0, 47.0, 47.0, 46.0, 46.0, 46.0, 45.0, 45.0, 45.0, 44.0, 42.0, 41.0, 40.0, 39.0, 38.0, 37.0, 36.0, 35.0, 33.0, 32.0, 32.0, 31.0, 30.0, 29.0, 28.0, 27.0, 26.0, 25.0, 24.0, 23.0, 23.0, 22.0, 21.0, 20.0, 19.0, 19.0, 18.0, 17.0, 16.0, 16.0, 15.0, 15.0, 14.0, 14.0, 14.0, 14.0, 13.0, 13.0, 13.0, 13.0, 12.0, 12.0, 12.0, 11.0, 11.0, 11.0, 10.0, 10.0, 10.0, 9.0, 9.0, 8.0, 8.0, 7.0, 7.0, 6.0, 6.0, 5.0, 5.0, 4.0, 4.0, 3.0, 3.0, 2.0, 2.0, 2.0, 1.0, 1.0, 1.0]
DCNN_error=[7.393548583984375, 16.046270751953124, 17.860125732421874, 18.937994384765624, 18.0043701171875, 16.4022216796875, 16.5332763671875, 17.64781799316406, 20.272140502929688, 23.47820129394531, 26.05144348144531, 28.385659790039064, 30.131185913085936, 30.8243896484375, 30.142233276367186, 27.133575439453125, 22.267117309570313, 17.242642211914063, 14.824691772460938, 14.7977294921875, 16.21601257324219, 17.626968383789062, 18.94335021972656, 20.153851318359376, 21.489996337890624, 23.036529541015625, 24.674069213867188, 26.500421142578126, 28.382763671875, 30.263116455078126, 32.18103942871094, 34.24466552734375, 36.33772277832031, 38.37321166992187, 40.487161254882814, 42.27734375, 43.78951721191406, 45.23685913085937, 46.671136474609376, 48.089727783203124, 49.49290161132812, 50.892730712890625, 52.289285278320314, 53.702081298828126, 55.146017456054686, 56.58934326171875, 57.9989990234375, 59.323089599609375, 60.586361694335935, 61.85346984863281, 63.13728637695313, 64.43798217773437, 65.74280700683593, 67.0529541015625, 68.37596740722657, 69.71241149902343, 71.06193542480469, 72.4150634765625, 73.7814453125, 75.16759033203125, 76.56054992675782, 77.9595733642578, 79.34095153808593, 80.74630126953124, 82.14690856933593, 83.5143035888672, 84.86595458984375, 86.19172973632813, 87.47842407226562, 88.72452392578126, 89.95353698730469, 91.15914611816406, 92.34206085205078, 93.48692169189454, 94.58034057617188, 95.6494369506836, 96.70816650390626, 97.7341323852539, 98.69466094970703, 99.53999481201171, 100.30242614746093, 101.02117767333985, 101.68887329101562, 102.30245819091797, 102.86361694335938, 103.3729736328125, 103.83826904296875, 104.26753234863281, 104.65949096679688, 105.01519165039062, 105.32564849853516, 105.6035888671875, 105.83790283203125, 106.02224731445312, 106.15188751220703, 106.24760589599609, 106.29198303222657, 106.28087768554687, 106.23437194824218, 106.1342788696289, 105.96930541992188, 105.76238250732422, 105.51959228515625, 105.24507141113281, 104.93495178222656, 104.59053344726563, 104.20867614746093, 103.79864654541015, 103.36803436279297, 102.9124542236328, 102.43032379150391, 101.90979766845703, 101.35925750732422, 100.79779815673828, 100.22717895507813, 99.64889221191406, 99.06417388916016, 98.47251434326172, 97.87629852294921, 97.27687225341796, 96.67556457519531, 96.07220306396485, 95.46383666992188, 94.85089416503907, 94.23588104248047, 93.61707611083985, 92.9865005493164, 92.35761108398438, 91.7247085571289, 91.07981719970704, 90.43153228759766, 89.77662658691406, 89.1103530883789, 88.43452758789063, 87.75074005126953, 87.06114196777344, 86.36598129272461, 85.66523132324218, 84.95632095336914, 84.24191665649414, 83.52625350952148, 82.8073600769043, 82.0824806213379, 81.3420654296875, 80.59068145751954, 79.83462219238281, 79.0764991760254, 78.31640014648437, 77.55542373657227, 76.7926856994629, 76.02772216796875, 75.26147994995117, 74.49385833740234, 73.72537841796876, 72.95596847534179, 72.18580856323243, 71.4154899597168, 70.64504165649414, 69.88162689208984, 69.11389617919922, 68.34945297241211, 67.59569854736328, 66.83885803222657, 66.0839942932129, 65.3373649597168, 64.59981384277344, 63.87172164916992, 63.15215835571289, 62.44697570800781, 61.75296478271484, 61.0698127746582, 60.40365295410156, 59.74220199584961, 59.07789306640625, 58.438758087158206, 57.840606689453125, 57.28221893310547, 56.74076538085937, 56.20974273681641, 55.69633026123047, 55.20803298950195, 54.736470794677736, 54.26548767089844, 53.79447860717774, 53.33733978271484, 52.91722640991211, 52.53669128417969, 52.18153686523438, 51.835792541503906, 51.495714569091795, 51.19182205200195, 50.86767501831055, 50.55096664428711, 50.266310119628905, 49.92576446533203, 49.569026947021484, 49.24635543823242, 48.96003189086914, 48.701506805419925, 48.47493286132813, 48.282311248779294, 48.12596130371094, 48.02522964477539, 47.91366119384766, 47.76786499023437, 47.61513214111328, 47.48764190673828, 47.46861801147461, 47.556758117675784, 47.634918212890625, 47.68448753356934, 47.70831718444824, 47.6869384765625, 47.603401565551756, 47.48335609436035, 47.314675903320314, 47.115958786010744, 46.88259696960449, 46.60119781494141, 46.278222274780276, 45.90841903686523, 45.49435615539551, 45.06199722290039, 44.589942932128906, 44.07611770629883, 43.54781379699707, 42.98135757446289, 42.401889419555665, 41.80876426696777, 41.20363922119141, 40.59899978637695, 39.986270904541016, 39.35679244995117, 38.71127281188965, 38.04920616149902, 37.36880760192871, 36.64131889343262, 35.863210678100586, 35.07381706237793, 34.353241729736325, 33.709785270690915, 33.08384628295899, 32.446764373779295, 31.798194885253906, 31.138747215270996, 30.46994285583496, 29.797580909729003, 29.12162380218506, 28.4353328704834, 27.740602111816408, 27.044142723083496, 26.339580535888672, 25.630298614501953, 24.913745307922362, 24.18323631286621, 23.445000839233398, 22.70437889099121, 21.952284622192384, 21.202856636047365, 20.449898147583006, 19.693622303009032, 18.929722118377686, 18.15684280395508, 17.37267436981201, 16.57742099761963, 15.76873550415039, 14.949545288085938, 14.119805526733398, 13.291192722320556, 12.456794261932373, 11.618465042114257, 10.757815837860107, 9.881074619293212, 9.000032997131347, 8.11547212600708, 7.230427265167236, 6.423256492614746, 5.914760589599609, 5.406037998199463, 4.895994758605957, 4.383648109436035, 3.8692431449890137, 3.492104244232178, 3.3128729820251466, 3.1299845695495607, 2.9906350135803224, 3.15742712020874, 3.6641798973083497, 4.437283611297607, 5.352651309967041, 6.267384624481201, 7.184611415863037, 8.104288482666016]
        
TaFCN_error=[39.375006103515624, 45.959756469726564, 47.59447326660156, 44.13709716796875, 36.85532836914062, 40.58560638427734, 39.57156066894531, 59.840201187133786, 59.87359046936035, 59.26974220275879, 58.55359230041504, 57.954834365844725, 45.58396911621094, 34.42735290527344, 39.944984436035156, 38.78539123535156, 38.45716247558594, 38.278334045410155, 36.98129425048828, 38.42877044677734, 40.241407775878905, 40.340765380859374, 40.57994079589844, 41.11107635498047, 42.08767547607422, 43.69473876953125, 45.81863708496094, 48.08873596191406, 50.16363372802734, 51.954855346679686, 53.88062438964844, 55.85754547119141, 57.78212280273438, 59.696913146972655, 61.5308334350586, 63.14643249511719, 64.5261474609375, 65.70077667236328, 66.93054504394532, 68.17899932861329, 69.41412506103515, 70.6123779296875, 71.77348937988282, 72.90626220703125, 74.01777038574218, 75.1246841430664, 76.16891021728516, 77.15109710693359, 78.09354248046876, 78.99646301269532, 79.9305923461914, 80.91692352294922, 81.93697662353516, 83.02264556884765, 84.16164093017578, 85.35616912841797, 86.5999984741211, 87.90959014892579, 89.296533203125, 90.76092987060547, 92.23280334472656, 93.6769790649414, 95.11483535766601, 96.6959945678711, 98.52251434326172, 100.58084335327149, 102.84898529052734, 105.20732345581055, 107.52607879638671, 109.73876647949218, 111.81450500488282, 113.70483474731445, 115.3259292602539, 116.65385665893555, 117.73341751098633, 118.59923477172852, 119.32072677612305, 119.9300048828125, 120.38969039916992, 120.70336685180663, 120.8797607421875, 120.93659744262695, 120.93934936523438, 120.9055274963379, 120.84087677001953, 120.73537673950196, 120.59166641235352, 120.41384429931641, 120.20150604248047, 119.9622932434082, 119.69759674072266, 119.41153030395508, 119.11239242553711, 118.79673233032227, 118.45371704101562, 118.07762832641602, 117.64880981445313, 117.17680435180664, 116.6737060546875, 116.13630523681641, 115.56363143920899, 114.95875625610351, 114.3313705444336, 113.68764953613281, 113.05604476928711, 112.44205322265626, 111.85256576538086, 111.28980712890625, 110.75231475830078, 110.23385238647461, 109.7131477355957, 109.16521987915038, 108.57993011474609, 107.96271286010742, 107.34177017211914, 106.71242446899414, 106.06986999511719, 105.40945053100586, 104.73624267578126, 104.0581787109375, 103.3808807373047, 102.70214614868163, 102.01999740600586, 101.32915344238282, 100.63209533691406, 99.92581481933594, 99.20806427001953, 98.47912902832032, 97.73584060668945, 96.983984375, 96.22590713500976, 95.45886306762695, 94.68846817016602, 93.91251678466797, 93.1370002746582, 92.3632713317871, 91.59492073059081, 90.83337669372558, 90.08197822570801, 89.34256057739258, 88.61319198608399, 87.89042739868164, 87.16500396728516, 86.42075958251954, 85.65053443908691, 84.8604663848877, 84.07646331787109, 83.29631271362305, 82.50809860229492, 81.71740188598633, 80.92731246948242, 80.13696250915527, 79.34457206726074, 78.55112152099609, 77.75618858337403, 76.9621036529541, 76.16817779541016, 75.37170791625977, 74.58110885620117, 73.80002708435059, 73.02972145080567, 72.26903381347657, 71.51502304077148, 70.74850006103516, 69.9733715057373, 69.20264129638672, 68.4667724609375, 67.74014778137207, 67.00442123413086, 66.24781913757325, 65.48899765014649, 64.71904640197754, 63.97471885681152, 63.27286071777344, 62.67115173339844, 62.192037963867186, 61.974264526367186, 62.052056884765626, 62.28350257873535, 62.55203132629394, 62.601100540161134, 62.255282974243165, 61.59847755432129, 60.89030723571777, 60.14477615356445, 59.438452529907224, 58.81024398803711, 58.26687049865723, 57.76057319641113, 57.259843063354495, 56.78617858886719, 56.35087280273437, 55.94978408813476, 55.57318801879883, 55.2023868560791, 54.842282104492185, 54.49604034423828, 54.158179473876956, 53.82491493225098, 53.496921157836915, 53.16297035217285, 52.80531883239746, 52.39898490905762, 51.90814971923828, 51.32456550598145, 50.67661895751953, 50.056321716308595, 49.608934783935545, 49.40759391784668, 49.39256553649902, 49.36286334991455, 49.3064323425293, 49.22334098815918, 49.105588722229, 48.96880054473877, 48.79460144042969, 48.58247318267822, 48.33560409545898, 48.053932189941406, 47.73418979644775, 47.380713081359865, 46.999884605407715, 46.587709999084474, 46.146269989013675, 45.681603622436526, 45.176340866088864, 44.63321075439453, 44.052842712402345, 43.43763942718506, 42.79575080871582, 42.12723026275635, 41.42973117828369, 40.71093940734863, 39.97159433364868, 39.21378154754639, 38.4270806312561, 37.599864864349364, 36.727515888214114, 35.842638206481936, 34.9825496673584, 34.195284843444824, 33.488454055786136, 32.77487277984619, 32.052630519866945, 31.321811866760253, 30.58996686935425, 29.853644561767577, 29.11322441101074, 28.365260314941406, 27.613411235809327, 26.857947158813477, 26.099666118621826, 25.338243007659912, 24.57596092224121, 23.809574794769286, 23.19328317642212, 22.61654214859009, 22.034177017211913, 21.450747776031495, 20.87019500732422, 20.28521842956543, 19.698130893707276, 19.107946395874023, 18.51206374168396, 17.91097264289856, 17.30361752510071, 16.692136383056642, 16.075992631912232, 15.461021232604981, 14.8506094455719, 14.23269009590149, 13.595963144302369, 12.929102373123168, 12.222241401672363, 11.513602018356323, 10.802784299850464, 10.088422060012817, 9.37155876159668, 8.652344608306885, 7.931461906433105, 7.2091785907745365, 6.48420991897583, 5.820221424102783, 5.438226413726807, 5.225995826721191, 5.193736934661866, 5.414930820465088, 5.78898606300354, 6.241176199913025, 6.981009769439697, 7.733611226081848, 8.4871089220047, 9.241937613487243]

Our_error=[186, 279, 274, 17, 17, 17, 17, 17, 12, 5, 1, 4, 6, 8, 10, 11, 12, 12, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 13, 13, 13, 12, 12, 12, 11, 11, 10, 10, 9, 9, 8, 8, 7, 7, 6, 6, 6, 5, 5, 4, 4, 3, 3, 3, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 5, 5, 6, 7, 8, 9, 10, 10, 11, 12, 12, 13, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15, 14, 14, 14, 14, 14, 13, 13, 13, 12, 12, 11, 11, 11, 10, 10, 9, 9, 9, 8, 8, 7, 7, 7, 6, 6, 6, 5, 5, 5, 5, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 7, 7, 7, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 8, 8, 8, 8, 7, 7, 7, 6, 6, 6, 5, 5, 5, 4, 4, 4, 3, 3, 3, 2, 2, 2, 2, 1, 1, 1, 1, 0]
Hu_error=[]
for i in range(len(Hu)):    
    Hu_error.append(abs(len(Hu)-i-Hu[i]))
    

fig, ax = plt.subplots(figsize = (7, 4))
min_len=min(len(Si),len(Zhang),len(TaFCN),len(Our))-10

fig, ax = plt.subplots(figsize = (7, 4))
# 在生成的坐标系下画折线图

ax.plot(np.arange(min_len,0,-1),Si_error[-min_len:], linewidth=2,c='b',label="Si' model",linestyle='--')
ax.plot(np.arange(min_len,0,-1),Zhang_error[-min_len:], linewidth=2,c='g',label="Zhang' model",linestyle='--')
ax.plot(np.arange(min_len,0,-1),Hu_error[-min_len:], linewidth=2,c='#A67D3D',label="Hu' model",linestyle='--')
ax.plot(np.arange(min_len,0,-1),DCNN_error[-min_len:], linewidth=2,c='#E47833',label="DCNN",linestyle='--')
ax.plot(np.arange(min_len,0,-1),TaFCN_error[-min_len:], linewidth=2,c='y',label="TaFCN",linestyle='--')
ax.plot(np.arange(min_len,0,-1),Our_error[-min_len:], linewidth=2,c='r',label="Our",linestyle='--')
# ax.plot(groud_truth[-min_len:], linewidth=1,c='black',label="Groud truth")


def rmse(x):
    s=0
    for i in x:
        s+=i*i
    r=sqrt(s/len(x))
    return r

def aae(x):
    return np.mean(x)


def score(Y_test,Y_pred) :
      
    s=0    
    for i in range(len(Y_pred)):
        if Y_pred[i]>Y_test[i]:
            s=s+math.exp((Y_pred[i]-Y_test[i])/10)-1
        else:
            s=s+math.exp((Y_test[i]-Y_pred[i])/13)-1    
    # print('unbalanced_penalty_score{}'.format(s))
    return s  
  
def error_range(Y_test,Y_pred) : 
    Y_test =np.array(Y_test)  
    Y_pred =np.array(Y_pred) 
     
    error_range=(Y_test-Y_pred).min(),(Y_test-Y_pred).max()
    # print('error range{}'.format(error_range))
    return error_range

        
def error_list(Y_test,Y_pred) : 
    Y_test =np.array(Y_test)  
    Y_pred =np.array(Y_pred) 

    error_list=Y_test-Y_pred
    # Y_test =np.array(Y_test)  
    # Y_pred =np.array(Y_pred) 
     
    # error_range=(Y_test-Y_pred).min(),(Y_test-Y_pred).max()
    # print('error range{}'.format(error_range))
    return list(error_list)

print(list((error_list(groud_truth[-min_len:],Si[-min_len:]),error_list(groud_truth[-min_len:],Zhang[-min_len:]),error_list(groud_truth[-min_len:],Hu[-min_len:]),error_list(groud_truth[-min_len:],DCNN[-min_len:]),error_list(groud_truth[-min_len:],TaFCN[-min_len:]),error_list(groud_truth[-min_len:],Our[-min_len:]))))
        
print(list((rmse(Si_error[-min_len:]),rmse(Zhang_error[-min_len:]),rmse(Hu_error[-min_len:]),rmse(DCNN_error[-min_len:]),rmse(TaFCN_error[-min_len:]),rmse(Our_error[-min_len:]))))
print(list((aae(Si_error[-min_len:]),aae(Zhang_error[-min_len:]),aae(Hu_error[-min_len:]),aae(DCNN_error[-min_len:]),aae(TaFCN_error[-min_len:]),aae(Our_error[-min_len:]))))
print(list((score(groud_truth[-min_len:],Si[-min_len:]),score(groud_truth[-min_len:],Zhang[-min_len:]),score(groud_truth[-min_len:],Hu[-min_len:]),score(groud_truth[-min_len:],DCNN[-min_len:]),score(groud_truth[-min_len:],TaFCN[-min_len:]),score(groud_truth[-min_len:],Our[-min_len:]))))
print(list((error_range(groud_truth[-min_len:],Si[-min_len:]),error_range(groud_truth[-min_len:],Zhang[-min_len:]),error_range(groud_truth[-min_len:],Hu[-min_len:]),error_range(groud_truth[-min_len:],DCNN[-min_len:]),error_range(groud_truth[-min_len:],TaFCN[-min_len:]),error_range(groud_truth[-min_len:],Our[-min_len:]))))
# print
def predcition(targets,predictions):
    targets=np.array(targets)
    predictions=np.array(predictions)
    
    
    # targets=np.array(targets)
    # predictions=np.array(predictions)

    

    smape = np.sum( np.abs(predictions - targets)) /np.sum( np.abs( targets)) * 100
    print(np.sum( np.abs(predictions - targets)))
    
    print(np.sum( np.abs( targets)))
    
    print(smape)
    y=100-smape
    
    # print(y)
    return y 

print(list((predcition(groud_truth[-min_len:],Si[-min_len:]),predcition(groud_truth[-min_len:],Zhang[-min_len:]),predcition(groud_truth[-min_len:],Hu[-min_len:]),predcition(groud_truth[-min_len:],DCNN[-min_len:]),predcition(groud_truth[-min_len:],TaFCN[-min_len:]),predcition(groud_truth[-min_len:],Our[-min_len:]))))

# 显示图形
font1 = { 
'weight' : 'normal',
'size' : 14,
}
    
      
    #设置横纵坐标的名称以及对应字体格式
font2 = {#'family' : 'Times New Roman',
'weight' : 'normal',
'size' : 30,
}

# plt.fill_between(np.arange(min_len,0,-1), np.array(np.arange(min_len,0,-1))*(error_rate), np.arange(min_len,0,-1)*0,color="#CCCCCC")# color="#CCEEFF")
error_rate=0.1
error_rate_1=0.6
plt.fill_between(np.arange(min_len,0,-1), np.array(np.arange(min_len,0,-1))*(error_rate), np.arange(min_len,0,-1)*0,color="#CCCCCC",label='Error band (±{:.0%})'.format(error_rate))# color="#CCEEFF")
plt.fill_between(np.arange(min_len,0,-1), np.array(np.arange(min_len,0,-1))*(error_rate), np.array(np.arange(min_len,0,-1))*(error_rate_1),color="#E7E7E7",label='Error band (±{:.0%})'.format(error_rate_1))# color="#CCEEFF")
    
plt.xlabel('Actual RUL (pass)',font1) #X轴标签
plt.ylabel("Absolute prediction error (pass)",font1) #Y轴标签
plt.gca().invert_xaxis()
plt.grid(alpha=0.5,linestyle='-.') #网格线，更好看

plt.legend(loc="upper right")
# plt.ylim((-10,150))
plt.savefig(last_last_last_path+r'\figure\by_code\The_absolute_error_of_predicted_RUL_xiandao_c1_c4_to_c6.eps',dpi=800,format='eps',bbox_inches = 'tight')
plt.savefig(last_last_last_path+r'\figure\by_code\The_absolute_error_of_predicted_RUL_xiandao_c1_c4_to_c6.png',dpi=800,format='png',bbox_inches = 'tight')
plt.show()

